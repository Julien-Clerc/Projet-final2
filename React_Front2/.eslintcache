[{"/home/julien/Rendu/ETP/React_Front2/src/index.js":"1","/home/julien/Rendu/ETP/React_Front2/src/store.js":"2","/home/julien/Rendu/ETP/React_Front2/src/context.js":"3","/home/julien/Rendu/ETP/React_Front2/src/App.js":"4","/home/julien/Rendu/ETP/React_Front2/src/components/Test.jsx":"5","/home/julien/Rendu/ETP/React_Front2/src/components/Test2.jsx":"6","/home/julien/Rendu/ETP/React_Front2/src/components/radio/Player.jsx":"7","/home/julien/Rendu/ETP/React_Front2/src/components/Radio.jsx":"8","/home/julien/Rendu/ETP/React_Front2/src/components/Home.jsx":"9","/home/julien/Rendu/ETP/React_Front2/src/components/board-user.component.js":"10","/home/julien/Rendu/ETP/React_Front2/src/components/login.component.js":"11","/home/julien/Rendu/ETP/React_Front2/src/actions/auth.js":"12","/home/julien/Rendu/ETP/React_Front2/src/actions/message.js":"13","/home/julien/Rendu/ETP/React_Front2/src/helpers/history.js":"14","/home/julien/Rendu/ETP/React_Front2/src/components/register.component.js":"15","/home/julien/Rendu/ETP/React_Front2/src/components/profile.component.js":"16","/home/julien/Rendu/ETP/React_Front2/src/components/twitter/twitter.js":"17","/home/julien/Rendu/ETP/React_Front2/src/components/spotify/Player.js":"18","/home/julien/Rendu/ETP/React_Front2/src/components/three/TwitterBird.jsx":"19","/home/julien/Rendu/ETP/React_Front2/src/components/three/AmericanFlag.jsx":"20","/home/julien/Rendu/ETP/React_Front2/src/components/three/Farm.jsx":"21","/home/julien/Rendu/ETP/React_Front2/src/components/ui/Button.jsx":"22","/home/julien/Rendu/ETP/React_Front2/src/components/three/Feuillage.jsx":"23","/home/julien/Rendu/ETP/React_Front2/src/components/three/Text.jsx":"24","/home/julien/Rendu/ETP/React_Front2/src/components/three/Disc.jsx":"25","/home/julien/Rendu/ETP/React_Front2/src/components/three/Map.jsx":"26","/home/julien/Rendu/ETP/React_Front2/src/components/three/Mist.jsx":"27","/home/julien/Rendu/ETP/React_Front2/src/reducers/index.js":"28","/home/julien/Rendu/ETP/React_Front2/src/zustand.js":"29","/home/julien/Rendu/ETP/React_Front2/src/services/auth.service.js":"30","/home/julien/Rendu/ETP/React_Front2/src/services/user.service.js":"31","/home/julien/Rendu/ETP/React_Front2/src/actions/types.js":"32","/home/julien/Rendu/ETP/React_Front2/src/components/three/utils/getRandomInt.js":"33","/home/julien/Rendu/ETP/React_Front2/src/components/three/utils/randomBetween.js":"34","/home/julien/Rendu/ETP/React_Front2/src/reducers/auth.js":"35","/home/julien/Rendu/ETP/React_Front2/src/reducers/message.js":"36","/home/julien/Rendu/ETP/React_Front2/src/services/auth-header.js":"37"},{"size":760,"mtime":1613471643836,"results":"38","hashOfConfig":"39"},{"size":340,"mtime":1613471643836,"results":"40","hashOfConfig":"39"},{"size":1310,"mtime":1613559527750,"results":"41","hashOfConfig":"39"},{"size":13788,"mtime":1613694838515,"results":"42","hashOfConfig":"39"},{"size":215,"mtime":1613471643828,"results":"43","hashOfConfig":"39"},{"size":477,"mtime":1613559527750,"results":"44","hashOfConfig":"39"},{"size":1246,"mtime":1613559527750,"results":"45","hashOfConfig":"39"},{"size":9592,"mtime":1613673904003,"results":"46","hashOfConfig":"39"},{"size":14065,"mtime":1613484751168,"results":"47","hashOfConfig":"39"},{"size":843,"mtime":1613471643828,"results":"48","hashOfConfig":"39"},{"size":3949,"mtime":1613471643828,"results":"49","hashOfConfig":"39"},{"size":1810,"mtime":1613471643828,"results":"50","hashOfConfig":"39"},{"size":206,"mtime":1613471643828,"results":"51","hashOfConfig":"39"},{"size":95,"mtime":1613471643836,"results":"52","hashOfConfig":"39"},{"size":5028,"mtime":1613471643828,"results":"53","hashOfConfig":"39"},{"size":10659,"mtime":1613645685399,"results":"54","hashOfConfig":"39"},{"size":1962,"mtime":1613693497527,"results":"55","hashOfConfig":"39"},{"size":9620,"mtime":1613673904003,"results":"56","hashOfConfig":"39"},{"size":1299,"mtime":1613471643828,"results":"57","hashOfConfig":"39"},{"size":1285,"mtime":1613471643828,"results":"58","hashOfConfig":"39"},{"size":2683,"mtime":1613471643828,"results":"59","hashOfConfig":"39"},{"size":290,"mtime":1613484751168,"results":"60","hashOfConfig":"39"},{"size":1692,"mtime":1613559527750,"results":"61","hashOfConfig":"39"},{"size":2846,"mtime":1613471643828,"results":"62","hashOfConfig":"39"},{"size":2063,"mtime":1613471643828,"results":"63","hashOfConfig":"39"},{"size":3101,"mtime":1613471643828,"results":"64","hashOfConfig":"39"},{"size":1565,"mtime":1613471643828,"results":"65","hashOfConfig":"39"},{"size":158,"mtime":1613471643836,"results":"66","hashOfConfig":"39"},{"size":483,"mtime":1613471643836,"results":"67","hashOfConfig":"39"},{"size":632,"mtime":1613471643836,"results":"68","hashOfConfig":"39"},{"size":521,"mtime":1613471643836,"results":"69","hashOfConfig":"39"},{"size":303,"mtime":1613471643828,"results":"70","hashOfConfig":"39"},{"size":160,"mtime":1613471643828,"results":"71","hashOfConfig":"39"},{"size":232,"mtime":1613471643828,"results":"72","hashOfConfig":"39"},{"size":1041,"mtime":1613471643836,"results":"73","hashOfConfig":"39"},{"size":353,"mtime":1613471643836,"results":"74","hashOfConfig":"39"},{"size":238,"mtime":1613471643836,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"190htvb",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"87"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"/home/julien/Rendu/ETP/React_Front2/src/index.js",["166"],"/home/julien/Rendu/ETP/React_Front2/src/store.js",[],"/home/julien/Rendu/ETP/React_Front2/src/context.js",[],"/home/julien/Rendu/ETP/React_Front2/src/App.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"/home/julien/Rendu/ETP/React_Front2/src/components/Test.jsx",["182","183"],"import React, { Component } from 'react'\n\nimport { ThreeContext } from \"../context\";\n\nexport default () => (\n    <ThreeContext.Consumer>\n      {value => <h1>Hello {value.radio}!</h1>}\n    </ThreeContext.Consumer>\n);",["184","185"],"/home/julien/Rendu/ETP/React_Front2/src/components/Test2.jsx",[],"/home/julien/Rendu/ETP/React_Front2/src/components/radio/Player.jsx",["186"],"import { useStore } from '../../zustand'\nimport ReactHowler from 'react-howler'\nimport React, { Component } from 'react'\nimport { store } from 'react-notifications-component';\n\nclass Player extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            bears: 0,\n        }\n    }\n    async componentDidUpdate() { \n      if (this.props.playing === true && this.props.radiocounter < 2 ){\n        store.addNotification({\n          title: \"Radio playing\",\n          message: \"Radio playing... nicely. Pause and play again to get next channel.\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 7000,\n            onScreen: true\n          }\n        })\n      }\n    }\n    render(){\n      return (\n          <div className=\"player\">\n                  <ReactHowler\n                  src={this.props.radioUrl}\n                  format= {['mp3', 'aac']}\n                  html5={true}\n                  playing={this.props.playing}\n                  />\n          </div>\n      );\n    }\n}\nexport default Player\n\n","/home/julien/Rendu/ETP/React_Front2/src/components/Radio.jsx",["187","188","189","190","191","192"],"import React, { Component, useState } from 'react'\nimport Button from './ui/Button.jsx'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { BearCounter, useStore } from '../zustand'\nimport { store } from 'react-notifications-component';\nimport axios from 'axios'\nimport Masonry from 'react-masonry-component';\n\nclass Radio extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n          playing: false,\n          url:\"\",\n          name:\"\",\n          shortname:\"\",\n          urlsstorage: [],\n          isFetching: false,\n          data: { id: '', name: '', url: '', shortname: '' },\n          globalData: []\n        }\n        this.handlePlay = this.handlePlay.bind(this)\n        this.handleChange = this.handleChange.bind(this) \n        this.handleSubmit = this.handleSubmit.bind(this) \n        this.sendRadio = this.sendRadio.bind(this)\n        this.removeRadio = this.removeRadio.bind(this) \n        this.fetchRadio = this.fetchRadio.bind(this) \n    }\n    handlePlay () {\n        this.props.updatePlayer()\n    }\n    sendRadio(url, name, shortname) {\n      var data = JSON.stringify({\"url\": url,\"name\": name,\"shortname\": shortname});\n\n      var config = {\n        method: 'post',\n        url: 'http://localhost:8087/radio',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : data\n      };\n\n      axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      store.addNotification({\n          title: \"Radio ajoutée !\",\n          message: \"Espérons que ton flux mp3 va marcher.\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 3000,\n            onScreen: true\n          }\n      });\n    }\n    handleChange(event){ \n      this.setState({ \n        // Computed property names \n        // keys of the objects are computed dynamically \n        [event.target.name] : event.target.value\n      })\n    } \n    handleSubmit(event){ \n      let urlsstorage = this.state.urlsstorage\n      const { url, name, shortname } = this.state \n      event.preventDefault()\n      //console.log(\"URL SUBSTRING \"+url.substring(0, 3))\n      //console.log(\"URL SUBSTRING \"+url.substring(0, 3))\n      //verification\n      if (typeof url === 'string' && (url.substring(0, 4) == \"http\" )){\n        if ((shortname.length < 4) && typeof shortname === 'string') {\n          if ((name.length < 20 ) && typeof name === 'string') {\n            if ( shortname != \"\"){\n             urlsstorage.push({url: url, name: name, shortname: shortname})\n             //console.log(this.state.urlsstorage)\n              \n              alert(` \n                ____Your Details____\\n \n                Email : ${url} \n                Name : ${name} \n                Age : ${shortname} \n              `)  \n              this.sendRadio( url, name, shortname)\n            }\n            else\n            {\n              store.addNotification({\n                title: \"Remplis tous les champs ;)\",\n                message: \"Doucement le matin, pas trop vite l'après-midi.\",\n                type: \"warning\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 3000,\n                  onScreen: true\n                }\n              });\n            }\n          }\n          else\n          {\n            store.addNotification({\n              title: \"Pas plus de vingt caractères :(\",\n              message: \"Tu aimes défier les règles toi.\",\n              type: \"warning\",\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n              dismiss: {\n                duration: 3000,\n                onScreen: true\n              }\n            });\n          }\n        }\n        else\n        {\n          store.addNotification({\n            title: \"Pas plus de trois caractères... ...\",\n            message: \"La règle était pourtant simple !\",\n            type: \"warning\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        }\n      }\n      else\n      {\n        store.addNotification({\n          title: \"Trouve une vraie URL mec!\",\n          message: \"Vous devez uploader une URL (http/https) valide\",\n          type: \"warning\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 3000,\n            onScreen: true\n          }\n        });\n      }\n    }\n    removeRadio(id){\n      var data = ''\n\n      var config = {\n        method: 'delete',\n        url: 'http://localhost:8087/radio/'+String(id),\n        headers: { },\n        data : data\n      };\n\n      axios(config)\n      .then(function (response) {\n        //console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    fetchRadio = () => {\n      this.setState({...this.state, isFetching: true});\n      let dataarray = []\n      axios.get(\"http://localhost:8087/radio\")\n          .then(response => {\n              //console.log(\"Radios response \"+JSON.stringify(response.data))\n              let dataStr = JSON.stringify(response.data)\n              dataStr = JSON.parse(dataStr)\n              //console.log(\"DATASTR \"+dataStr)\n              \n              dataStr.forEach(element => dataarray.push([element._id, element.name, element.url,  element.shortname]));\n              //console.log(\"HEY IM DATAARRAY \"+dataarray[0][0])\n\n              this.setState({ \n                globalData: dataarray\n              })\n              //response.data.forEach(element => temp = Object.keys(element[1]));\n              /*\n              for (const item in dataStr) {\n                console.log(\"ITEM \"+item)\n                this.setState({ data: {...this.state.data,\n                   id: item._id,\n                   url: item.url,\n                   name: item.name,\n                   shortname: item.shortname\n                  }\n                })\n                \n                console.log(this.state.data)\n              }*/\n              //console.log(\"GLOBALDATA :\"+JSON.stringify(this.state.globalData[0][1]))\n              \n          })\n          .catch(e => {\n              console.log(e);\n              this.setState({...this.state, isFetching: false});\n          });\n    };\n    componentDidMount() {\n      this.fetchRadio();\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n    componentWillUnmount() {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n    render () {\n        const { user: currentUser } = this.props;\n        console.log(\"CURRENT USER : \"+JSON.stringify(currentUser))\n      \n\n        return (\n          <div>\n            <div>\n            <Button onClick={this.handlePlay} className=\"play-pause\">Play/Pause</Button>\n            </div>\n            <form onSubmit={this.handleSubmit} className=\"create-radio-form\">\n            {this.state.alertSubmitted}\n                <p className=\"CTA-text\">Hit the button to play, to pause, get next radio by playing again.</p>\n                <br/>\n                <h4>URL</h4>\n                <input type=\"text\" value={this.state.url} name=\"url\" onChange={this.handleChange}/>\n                <h4>Name</h4>\n                <input type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleChange}/>\n                <h4>Shortname ( 3 letters max ):</h4>\n                <input type=\"text\" value={this.state.shortname} name=\"shortname\" onChange={this.handleChange}/>\n                <br/>\n                <br/>\n            <button className=\"create-radio-button radio-button\">Create Radio</button> \n            </form>\n            <p></p>\n              <div>\n                <ul className=\"radio-list\">\n                <Masonry>\n                  {this.state.globalData.map((item, i) => {     \n                      //console.log(\"Entered !!!!!!!\");                 \n                      // Return the element. Also pass key     \n                      return (\n                      <div className=\"masonry-tile\">\n                        \n                          <li key={item}><h4>{item[1]} </h4><br /><em>{item[2]}</em><h5>{item[3]}</h5></li>\n                          <button className=\"delete-radio radio-button\" onClick={() => { this.removeRadio(item[0]) }}>removeRadio</button>\n                        \n                      </div>\n                      ) \n                  })}\n                  </Masonry>\n                </ul>\n              </div>\n\n          </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state.auth;\n    return {\n      user,\n    };\n}\n  \n\nexport default connect(mapStateToProps)(Radio)","/home/julien/Rendu/ETP/React_Front2/src/components/Home.jsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],"import React, { useRef, useState, Component, useContext, context } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { softShadows, Sky, Stars, OrbitControls, PerspectiveCamera } from \"@react-three/drei\"\nimport { useSpring, a } from 'react-spring/three'\nimport JSONfont from \"../fonts/Cocogoose.json\"\nimport axios from 'axios'\nimport ReactHowler from 'react-howler'\n\n//JSX\nimport Farm from \"./three/Farm.jsx\"\nimport Twitter from \"./three/TwitterBird.jsx\"\nimport Trees from \"./three/Feuillage.jsx\"\nimport Text from \"./three/Text.jsx\"\nimport Map from \"./three/Map.jsx\"\nimport Disc from \"./three/Disc.jsx\"\nimport Mist from \"./three/Mist.jsx\"\nimport AmericanFlag from \"./three/AmericanFlag.jsx\"\n\nvar night = false\n//const hourtest = 12\n\nfunction azimuth(daystart, daylength, weather, description){\n  //Get current geographic hour\n  var d = new Date();\n  //get current hour\n  var currenthour = d.getHours();\n\n  //get by API\n  daystart = Number(daystart)\n  daylength = Number(daylength)\n\n  //Ex : Valeur de départ Azimuth: 0.1171\n  //Ex : Valeur de fin Azimuth: 0.3882\n  //Ex : longueur totale de la translation d'azimuth : 0.3882 - 0.1171\n  let total = 0.5\n\n  //déclaration de la valeur courante\n  let azimuthNow\n\n  azimuthNow = (total * (currenthour-daystart))/daylength\n\n  //sets night to true if night it is\n  if ( (currenthour > (daylength + daystart)-1)||(currenthour < daystart) ){\n    night = true\n  }\n  else\n  {\n    night = false\n  }\n\n  return azimuthNow\n}\n\nfunction inclination(daystart, daylength){\n  //Get current geographic hour\n  var d = new Date();\n  //get current hour\n  var currenthour = d.getHours();\n  daystart = Number(daystart)\n  daylength = Number(daylength)\n\n  //get by API\n  let noon = daylength/2 + daystart //midi = la moitié de la journée de soleil + l'heure de démarrage\n  //soit pour un jour d'ensoleillement de 11h = 11/2 + 6 = 11.5\n\n  //currenthour = hourtest\n\n  //Ex : Valeur de départ Inclination: 0.1171\n  //Ex : Valeur de fin Inclination: 0.3882\n  //Ex : longueur totale de la translation d'azimuth : 0.3882 - 0.1171\n  let total = 0.5 - 0.388\n\n  //déclaration de la valeur courante\n  let inclinationNow\n\n  \n\n  if (currenthour < noon) {\n    inclinationNow = (currenthour - daystart) * total / (daylength/2);\n  }\n  else\n  {\n    let diffHour = noon - (currenthour - noon)\n    inclinationNow = (diffHour - daystart) * total / (daylength/2);\n  }\n\n  return inclinationNow + 0.5\n  /*\n  azimuth\n  0.1171\n  0.3882\n\n  inclination\n  0.5\n  0.388\n  0.5\n\n  exposure\n  0.1171   */\n}\n\n// soft Shadows\nsoftShadows();\n\n//globals\nvar forestNumber = []\nconst numbertrees = 300\nconst numberclouds = 100\n\nconst Rain = ({ position, color, args, numberrain }) => {\n\n  var rainpositions = []\n  for (let i = 0; i < numberrain; i++) {\n      let rainNewPosX = getRandomInt(45);\n      let rainNewPosZ = getRandomInt(45); \n      let object = {\n        x: rainNewPosX,\n        y: 40+getRandomInt(10),\n        z: rainNewPosZ\n      }\n      rainpositions.push(object)\n  }\n\n\n  //ref to target the mesh\n  const grouprain = useRef();\n\n  //useFrame allows us to re-render/update on each frame\n  useFrame(() => {\n    if (grouprain.current == null ){\n    }\n    else\n    {\n      if (grouprain.current.position.y >= -40){\n        grouprain.current.position.y = grouprain.current.position.y -= 1.2\n      }\n      else\n      {\n        grouprain.current.position.y = 5;\n      }\n    }\n  });\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  return  (\n    <group ref={grouprain}>\n      { rainpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={props.scale}\n        castShadow>\n        <boxBufferGeometry attach='geometry' args={args} />\n        <meshBasicMaterial color={color} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n};\n\nconst Snow = ({ position, color, args, numbersnow }) => {\n\n  var snowpositions = []\n  for (let i = 0; i < numbersnow; i++) {\n      let snowNewPosX = getRandomInt(45);\n      let snowNewPosZ = getRandomInt(45); \n      let object = {\n        x: snowNewPosX,\n        y: 40+getRandomInt(10),\n        z: snowNewPosZ\n      }\n      snowpositions.push(object)\n  }\n\n\n  //ref to target the mesh\n  const groupsnow = useRef();\n\n  //useFrame allows us to re-render/update on each frame\n  useFrame(() => {\n    if (groupsnow.current == null ){\n      //console.log(\"groupsnow null\")\n    }\n    else\n    {\n      if (groupsnow.current.position.y >= -40){\n        groupsnow.current.position.y = groupsnow.current.position.y -= 1.2\n      }\n      else\n      {\n        groupsnow.current.position.y = 5;\n      }\n    }\n  });\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  return  (\n    <group ref={groupsnow}>\n      { snowpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={props.scale}\n        castShadow>\n        <sphereBufferGeometry attach='geometry' args={args} />\n        <meshBasicMaterial color={color} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n};\n\nfunction Clouds(props, color, number) {\n  var cloudpositions = []\n  for (let i = 0; i < props.number; i++) {\n      let cloudNewPosX = getRandomInt(45);\n      let cloudNewPosY = 50+getRandomInt(15); \n      let cloudNewPosZ = getRandomInt(45);\n      let object = {\n        x: cloudNewPosX,\n        y: cloudNewPosY,\n        z: cloudNewPosZ\n      } \n      cloudpositions.push(object)\n  }\n\n  const groupclouds = useRef();\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n\n  return  (\n    <group ref={groupclouds}>\n      { cloudpositions.map((d, index) =>  (\n      <a.mesh\n        position={[d.x, d.y, d.z]}\n        key={index}\n        onClick={() => setExpand(!expand)}\n        scale={[ 20, 8, 20 ]}\n        castShadow\n        receiveshadow>\n        <boxBufferGeometry attach=\"geometry\" args={d.args} />\n        <a.meshPhysicalMaterial attach=\"material\" color={props.color} roughness={0} opacity={0.8} transparent={true} />\n      </a.mesh>\n    ))}\n    </group>\n  );\n}\n/*\nfunction Dolly() {\n  // This one makes the camera move in and out\n  useFrame(({ camera }) => {\n    camera.position.z = 200\n  })\n  return null\n}*/\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={1} />\n      <ambientLight intensity={0.3} />\n      <spotLight\n        castShadow\n        intensity={0.1}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max)) - Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction cloudsNumber(val=\"Clear\"){\n  if (val == \"Clear\"){\n    return 0\n  }\n  else if (val == \"Rain\"){\n    return 30\n  }\n  else if (val == \"Snow\"){\n    return 30\n  }\n  else if (val == \"Thunderstorm\"){\n    return 100\n  }\n  else if (val == \"Drizzle\"){\n    return 20\n  }\n  else if (val == \"Clouds\"){\n    return 50\n  }\n  else if (val == \"Mist\"){\n    return 5\n  }\n  else{\n    return 2\n  }\n}\n\nfunction GetNumberRain(propval, val=\"Clear\"){\n  if (propval == 0){\n    if (val == \"Clear\"){\n      return 0\n    }\n    else if (val == \"Rain\"){\n      return 100\n    }\n    else if (val == \"Snow\"){\n      return 0\n    }\n    else if (val == \"Thunderstorm\"){\n      return 20\n    }\n    else if (val == \"Drizzle\"){\n      return 0\n    }\n    else if (val == \"Clouds\"){\n      return 0\n    }\n    else if (val == \"Mist\"){\n      return 3\n    }\n    else{\n      console.log(\"RainNumber \"+val)\n      return 2\n    }\n  }\n  else\n  {\n    return propval\n  }\n}\n\nfunction GetNumberSnow(propval, val=\"Clear\"){\n  if (propval == 0){\n    if (val == \"Clear\"){\n      return 0\n    }\n    else if (val == \"Rain\"){\n      return 0\n    }\n    else if (val == \"Snow\"){\n      return 100\n    }\n    else if (val == \"Thunderstorm\"){\n      return 20\n    }\n    else if (val == \"Drizzle\"){\n      return 0\n    }\n    else if (val == \"Clouds\"){\n      return 0\n    }\n    else if (val == \"Mist\"){\n      return 3\n    }\n    else{\n      return 2\n    }\n  }\n  else\n  {\n    return propval\n  }\n}\n\nfunction MistChecker(val=\"Clear\"){\n  if (val == \"Mist\"){\n      return 1\n  }\n  else\n  {\n    console.log(\"VALCHECKER \"+val)\n    return 0\n  }\n}\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          rise: '8',\n          set: null,\n          daylight: '10',\n          numberclouds: null,\n          temperature: '0',\n          town: 'Undefined',\n          weather: \"\",\n          description: \"toto\",\n          terraincolor: this.props.terraincolor,\n          fieldcolor: this.props.fieldcolor,\n          roadcolor: this.props.roadcolor,\n          treecolor: this.props.treecolor,\n          playing: false\n        }\n    }\n\n    snowManager(weather){\n      if ( weather == \"Snow\" ){\n        this.setState({\n          terraincolor: \"#ffffff\",\n          fieldcolor: \"#ffffff\",\n          roadcolor: \"#ffffff\",\n          treecolor: \"#ffffff\"\n        })\n        console.log(\"EQUAL !!!\")\n      } \n    }\n    async componentDidMount() {\n\n      var data = JSON.stringify({\"city\": this.props.town});\n      // https://api.openweathermap.org/data/2.5/weather?q=toronto&appid=8d23c2c814d8bc6ea19d77c49f3cc746\n      var config = {\n        method: 'post',\n        url: 'http://localhost:8087/weather',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : data\n      };\n\n      let meteodata\n\n      await axios(config).then(function (response) {\n        const meteo = response.data\n        meteodata = meteo\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n      this.setState({\n        rise: JSON.stringify(meteodata.sun.rise),\n        set: JSON.stringify(meteodata.sun.set),\n        daylight: JSON.stringify(meteodata.sun.daylight),\n        numberclouds: Number(JSON.stringify(meteodata.weather.clouds.all)),\n        temperature: String((Number(JSON.stringify(meteodata.weather.main.temp))-273.15).toFixed(2)),\n        weather: meteodata.weather.weather[0].main,\n        description: meteodata.weather.weather[0].description,\n        town: this.props.town,\n      })\n      this.snowManager(meteodata.weather.weather[0].main)\n    }\n    homeUppercase(val='Undefined'){\n      val = val.toUpperCase()\n      return val\n    }\n    render(){\n        return(\n          <div className=\"fixedCanvas\" >\n              <Canvas style={{height:\"100vh\",width:\"100vw\",backgroundColor:\"#abfff5\"}}>\n                <Sky\n                  distance={45000} // Camera distance (default=450000)\n                  inclination={inclination(this.state.rise, this.state.daylight)} // Sun elevation angle from 0 to 1 (default=0)\n                  azimuth={azimuth(this.state.rise, this.state.daylight, this.state.weather, this.state.description )} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n                  turbidity={20}\n                  rayleigh={4}\n                  exposure={1000}\n                />\n                <Lights />\n                <OrbitControls minDistance={[180]} maxDistance={[300]}/>\n                <Trees treecolor={this.state.treecolor}/>\n                <Clouds color={this.props.cloudscolor} number={cloudsNumber(this.state.weather)}/>\n                <Text \n                  location={this.homeUppercase(this.state.town)} night={night}\n                  temperature={this.state.temperature + \" °\"}\n                />\n                <Snow\n                    color='white'\n                    args={[1, 1, 1]}\n                    numbersnow = {GetNumberSnow(this.props.snow, this.state.weather)}\n                />\n                <Rain\n                    color='grey'\n                    args={[0.3, 10, 0.3]}\n                    numberrain = {GetNumberRain(this.props.rain, this.state.weather)}\n                />\n                <Mist mistTrue={MistChecker(this.state.weather)}/>\n                <Map \n                  terraincolor={this.props.terraincolor, this.state.terraincolor} \n                  fieldcolor={this.state.fieldcolor}\n                  roadcolor={this.state.roadcolor}\n                />\n                {night = true &&\n                  <Stars\n                    radius={200} // Radius of the inner sphere (default=100)\n                    depth={50} // Depth of area where stars should fit (default=50)\n                    count={5000} // Amount of stars (default=5000)\n                    factor={4} // Size factor (default=4)\n                    saturation={0} // Saturation 0-1 (default=0)\n                    fade // Faded dots (default=false)\n                  />\n                }\n                  <Farm />\n                  <Twitter />\n                  <Disc updatePlayer={this.props.updatePlayer}/>\n                  \n              </Canvas>\n          </div>\n        )\n    }\n}\n\nexport default Home;\n\n/*<Stars\nradius={100} // Radius of the inner sphere (default=100)\ndepth={50} // Depth of area where stars should fit (default=50)\ncount={5000} // Amount of stars (default=5000)\nfactor={4} // Size factor (default=4)\nsaturation={0} // Saturation 0-1 (default=0)\nfade // Faded dots (default=false)\n\n  \n            <Farm />\n<AmericanFlag/>\n            <Rain\n                color='grey'\n                args={[0.3, 10, 0.3]}\n                numberrain = {this.props.rain}\n            />\n            <Snow\n                color='white'\n                args={[1, 1, 1]}\n                numbersnow = {this.props.snow}\n            />\n            <Suspense fallback={null}>\n              <TwitterBird position={[100, 100, 10]} rotation={[-0.5, 0.5, 0]}/>\n            </Suspense>\n<Groupfarm scale={[0.02, 0.02, 0.02]} position={[3, 5, -3]}/>\n            \n\n/>*/","/home/julien/Rendu/ETP/React_Front2/src/components/board-user.component.js",[],"/home/julien/Rendu/ETP/React_Front2/src/components/login.component.js",[],"/home/julien/Rendu/ETP/React_Front2/src/actions/auth.js",[],"/home/julien/Rendu/ETP/React_Front2/src/actions/message.js",[],"/home/julien/Rendu/ETP/React_Front2/src/helpers/history.js",[],"/home/julien/Rendu/ETP/React_Front2/src/components/register.component.js",[],"/home/julien/Rendu/ETP/React_Front2/src/components/profile.component.js",["229","230"],"import './Profile.css'\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { store } from 'react-notifications-component';\n\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar: '',\n      username: '',\n      email: '',\n      password: '',\n      cf_password: '',\n      loggedUser: {username: '', email: '', avatar: ''},\n      test: ''\n    };\n\n    this.changeAvatar = this.changeAvatar.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeCFPassword = this.onChangeCFPassword.bind(this);\n    this.handleUpdateProfile = this.handleUpdateProfile.bind(this);\n  }\n\n  async componentWillMount() {\n    const usr = await axios.get('http://localhost:8087/user/'+this.props.user.id)\n    console.log(\"nouveau user\",usr)\n    this.setState({loggedUser: {...this.state.loggedUser,\n      username: usr.data.username,\n      email: usr.data.email,\n      avatar: usr.data.avatar\n    }})\n    console.log(this.state.loggedUser)\n    this.setState({\n      username: this.state.loggedUser.username,\n      email: this.state.loggedUser.email,\n      avatar: this.state.loggedUser.avatar\n    })\n  };\n\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  onChangeCFPassword(e) {\n    this.setState({\n      cf_password: e.target.value,\n    });\n  };\n\n  async getAvatar(image) {\n    const img = await this.imageUpload(image);\n    return img;\n  };\n\n  async handleUpdateProfile(e) {\n\n    e.preventDefault();\n\n    const { username, email, password, cf_password, avatar } = this.state\n    console.log(avatar);\n    let media;\n    if(avatar !== this.state.loggedUser.avatar) {\n        media = await this.getAvatar([avatar])\n        console.log(\"media avant upload:\", media[0].url)\n        // const newAvatar = media[0].url;\n        this.updateAvatar(media[0].url);\n    }\n\n    if (password) {\n      // console.log(\"mdp\", password)\n      this.updatePassword(password, cf_password);\n    }\n\n    if (username !== this.state.loggedUser.username || email !== this.state.loggedUser.email) {\n      // console.log(\"nom\", username)\n      \n        this.updateProfile(username, email);\n      }\n\n      store.addNotification({\n        title: \"Update success :\",\n        message: \"Your profile has been updated !\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n      })\n    }\n\n  updateAvatar(avatar) {\n    const data = {}\n\n    data['avatar'] = avatar;\n    console.log(data)\n\n    fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      // this.getCurrentUser();\n    })\n    .catch(err => console.log(err))\n  }\n\n  updatePassword(password, cf_password) {\n    if (password.length < 6 || password.length > 40) {\n      console.log(\"err: password must be between 6 and 40\")\n\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"Your password must be between 6 and 40 characters.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n\n      })\n    }\n    if (password !== cf_password) {\n      console.log(\"err: password must match confirmation\")\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"The confirmation and the password must match.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n\n      })\n    }\n\n    if (!(password.length < 6 || password.length > 40) && !(password !== cf_password )) {\n\n      fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({password: password})\n    })\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(err => console.log(err))\n    }\n\n  }\n\n  async updateProfile(username, email) {\n\n    const data = {}\n\n    if (username !== this.state.loggedUser.username) data['username'] = username\n    if (email !== this.state.loggedUser.email) data['email'] = email\n\n    console.log(data);\n\n    fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      // this.getCurrentUser();\n    })\n    .catch(err => console.log(err))\n\n  }\n\n  async getCurrentUser() {\n    const usr = await axios.get('http://localhost:8087/user/'+this.props.user.id)\n    console.log(\"nouveau user\",usr)\n\n    this.setState({loggedUser: {...this.state.loggedUser,\n      username: usr.data.username,\n      email: usr.data.email,\n      avatar: usr.data.avatar\n    }})\n    // return {username: usr.data.username, email: usr.data.email}\n  }\n\n  changeAvatar(e) {\n    // console.log(e.target.files)\n    const file = e.target.files[0];\n    console.log(file);\n\n    this.setState({\n      avatar: file\n    });\n  }\n  \n  async imageUpload(images) {\n    const CLOUD_UPDATE_PRESET= \"nextjs_rotten_tomatoes\"\n    const CLOUD_NAME = \"detolcw1y\"\n    const CLOUD_API = \"https://api.cloudinary.com/v1_1/detolcw1y/image/upload\"\n\n    let imgArr = []\n\n    for(const item of images) {\n        console.log(item)\n        const formData = new FormData();\n        formData.append(\"file\",item)\n        formData.append(\"upload_preset\",CLOUD_UPDATE_PRESET)\n        formData.append(\"cloud_name\",CLOUD_NAME)\n\n\n        const res = await fetch(CLOUD_API, {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        console.log(\"response of upload :\",data)\n        imgArr.push({public_id: data.public_id, url: data.secure_url})\n\n        return imgArr;\n    }\n  }\n  \n\n  render() {\n\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    \n\n    return (\n      <div className=\"container profile_page\">\n        {/* <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken} ...{\" \"}\n          {currentUser.accessToken}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email} <br />\n          <strong>Service:</strong> {currentUser.service}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul> */}\n\n        <section className=\"row text-secondary\">\n                <div className=\"col-md-4\">\n                    <h3 className=\"text-center text-uppercase\">\n                         'User Profile' \n\n                    </h3>\n                    <div className=\"avatar\">\n                        <img src={this.state.loggedUser.avatar === this.state.avatar ? this.state.loggedUser.avatar : 'https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png'} alt=\"avatar\" />\n                        <span>\n                            <i className=\"fas fa-camera\"></i>\n                            <p>Change</p>\n                            <input type=\"file\" name=\"file\" id=\"file_up\" \n                            accept=\"image/*\" onChange={this.changeAvatar} />\n                        </span>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Name</label>\n                        <input type=\"text\" name=\"username\" value={this.state.username} className=\"form-control\"\n                        placeholder=\"Your username\" onChange={this.onChangeUsername} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" name=\"email\"  value={this.state.email}\n                        className=\"form-control\" onChange={this.onChangeEmail} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">New Password</label>\n                        <input type=\"password\" name=\"password\" value={this.password} className=\"form-control\"\n                        placeholder=\"Your new password\" onChange={this.onChangePassword}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"cf_password\">Confirm New Password</label>\n                        <input type=\"password\" name=\"cf_password\" value={this.cf_password} className=\"form-control\"\n                        placeholder=\"Confirm new password\" onChange={this.onChangeCFPassword}/>\n                    </div>\n\n                    <button className=\"btn btn-info\" onClick={this.handleUpdateProfile}>\n                        Update\n                    </button>\n\n                </div>\n\n                <div className=\"col-md-8\">\n                    <h3>Services available</h3>\n                    {this.state.loggedUser.username}\n                    <br>\n                    </br>\n                    {this.state.loggedUser.email}\n                    <br>\n                    </br>\n                 \n                </div>\n            </section>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);","/home/julien/Rendu/ETP/React_Front2/src/components/twitter/twitter.js",["231","232"],"import React, { Component } from \"react\";\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction MyVerticallyCenteredModal(props) {\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n      </Modal.Header>\n      <Modal.Body>\n      <TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName={props.tweet}\n          options={{height: 4000}}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nclass twitter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweet: 'JulienClerc_Off',\n      service: '',\n      modalShow: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  };\nhandleSubmit(event) {\n  event.preventDefault()\n  let yolo= this.state.tweet\n  console.log(\"MY DATA \" + yolo)\n};\n\nhandleChange(event) {\n  this.setState({ \n    // Computed property names \n    // keys of the objects are computed dynamically \n    [event.target.name] : event.target.value\n  })\n};\n\nrender() {\n\n  return (\n    <div>\n      <form onSubmit={this.handleSubmit}>\n      <input name='tweet' type='text' id='twitter' onChange={this.handleChange} value={this.state.tweet} />\n      {/* <Button >Twitter</Button> */}\n      <button variant=\"info\" onClick={() => this.setState({ modalShow: this.state.modalShow= true })}>\n        Timeline of @{this.state.tweet}\n      </button>\n      </form>\n        <>\n      <MyVerticallyCenteredModal \n        tweet={this.state.tweet}\n        show={this.state.modalShow}\n        onHide={() => this.setState({ modalShow: this.state.modalShow= false })}\n      />\n    </>\n    </div>\n\n    );\n  }   \n}  \n\nexport default twitter;","/home/julien/Rendu/ETP/React_Front2/src/components/spotify/Player.js",["233","234","235","236","237","238","239","240","241","242","243"],"import './Player.css'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport queryString from 'query-string'\n\n\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\n\n\n\nfunction SpotifyPlayer(props) {\n\n    var display = props.displaySpotify\n    const currentUser = props.currentUser;\n    console.log(\"CURRENT USER PLAYER SPOTIFY : \"+JSON.stringify(currentUser))\n\n    const [tokenData, setTokenData] = useState(null)\n    const [playing, setPlaying] = useState(false)\n    const [inPlaylist, setInPlaylist] = useState(false)\n\n    const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null)\n    const [playerData, setPlayerData] = useState(null)\n    const [currentPlaylist, setCurresntPlaylist] = useState(null)\n    const [allPlaylists, setAllPlaylists] = useState(null)\n\n\n    const getPlayerData = async () => {\n      console.log(\"ancienne chanson: :\", playerData)\n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+tokenData }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(\"nouvelle chanson\", data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n          setPlaying(true);\n        }).catch(err => {\n          setPlayerData(null)\n        })\n\n    }\n\n\n    function timer() {\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n\n\n\n    useEffect(() => {\n    let parsed = queryString.parse(window.location.search)\n    console.log(parsed)\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n        //on set le token\n        setTokenData(spotifytoken)\n    \n      const timer = setInterval(() => {\n        fetch('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n\n        })\n        \n\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          if (data) {\n            console.log(data);\n            setPlaying(true);\n            setInPlaylist(true)\n\n          }\n          else {\n            setInPlaylist(false)\n            setPlaying(false);\n          }\n        }).catch(err => {\n          setPlaying(false);\n        })\n\n\n        fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          if (data.items.length > 0){\n            setAllPlaylists(data);\n          }\n        })\n        \n\n        // getPlayerData();\n        fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        }).catch(err => {\n          setPlayerData(null)\n        })\n\n\n      }, 3000);\n    }\n\n\n    \n\n    }, [])\n\n    const  nextSong = async () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/next', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData },\n          method: \"POST\"\n      })\n          .then(getPlayerData())\n          .catch(err => console.log(err))\n        getPlayerData();   \n    }\n\n    const prevSong = () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/previous', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n        .then(getPlayerData())\n        .catch(err => console.log(err))\n      getPlayerData();   \n    }\n\n    const handlePlayPause = () => {\n\n      // if (inPlaylist) {\n\n        // if (playing && isCurrentlyPlaying) {\n        if (playing) {\n          setPlaying(false)\n          fetch('https://api.spotify.com/v1/me/player/pause', \n        \n        {\n            headers: {'Authorization': 'Bearer '+tokenData }\n        ,method: \"PUT\"\n        })\n            .then(response => response.json())\n            .then( data => console.log(data))\n            .catch(err => console.log(err))\n        } else {\n          setPlaying(true)\n          fetch('https://api.spotify.com/v1/me/player/play', \n        \n        {\n            headers: {'Authorization': 'Bearer '+tokenData }\n        ,method: \"PUT\"\n        })\n            .then(response => response.json())\n            .then( data => console.log(data))\n            .catch(err => console.log(err))\n\n        }\n      // }\n      //   else {\n      //     if(allPlaylists) {\n      //       console.log(\"on lance une playlist random de l'user\")\n      //       console.log(allPlaylists.items[0])\n      //         fetch('https://api.spotify.com/v1/me/player/play', \n          \n      //     {\n      //         headers: {'Authorization': 'Bearer '+tokenData }\n      //     ,method: \"PUT\",\n      //     data: JSON.stringify({'context_uri': 'spotify:playlist:'+allPlaylists.items[0].id})\n      //     })\n      //         .then(response => response.json())\n      //         .then( data => console.log(data))\n      //         .catch(err => console.log(err))\n      //       }\n      //   }\n      }\n    \n\n    console.log(\"CURRENT USER BEFORE IF \"+ currentUser)\n    if (currentUser != undefined){\n      if (display != false){\n        return (\n            <div className=\"player\" >\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Close</button>\n                  <div className=\"footer\" style={{display: \"flex\"}}>\n                    {\n                      !tokenData\n                    ?  <div className=\"login\"> <a href={'http://localhost:8087/spotify/login'}>LOGIN TO SPOTIFY</a> </div>\n                    \n                    : //si on veut un player sur toute la largeur, on enlève cette div\n                    <div className=\"footer\"> \n\n                      <div className=\"footer__left\"> \n                      {\n                        playerData \n                        ? (\n                        <div className=\"footer__left\">\n                          <img className=\"songRow__album\" src={playerData.item.album.images[2].url} alt={playerData.item.name} />\n\n                            <div className=\"footer__songInfo\">\n                              <h4>{playerData.item.name}</h4>\n                              <p>{playerData.item.artists.map((artist) => artist.name).join(\", \")}</p>\n                            </div>\n                        </div>\n                        ) : (\n                          <div className=\"footer__songInfo\">\n                            <h4>No song is playing</h4>\n                            <p>...</p>\n                          </div>\n                        )}\n                      \n                      </div>\n\n                      <div className=\"footer__center\">\n                        <ShuffleIcon className=\"footer__green\" />\n                        <SkipPreviousIcon onClick={prevSong} className=\"footer__icon\" />\n                        {\n                          !playing \n                          ?\n                          <PlayCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n                          :\n                          <PauseCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n\n                        }\n                          \n                        <SkipNextIcon onClick={nextSong} className=\"footer__icon\" />\n                        <RepeatIcon className=\"footer__green\" />\n                      </div>\n                    \n                      <div className=\"footer__right\">\n                        <Grid container spacing={2}>\n                          <Grid item>\n                            <PlaylistPlayIcon />\n                          </Grid>\n                          <Grid item>\n                            <VolumeDownIcon />\n                          </Grid>\n                          <Grid item xs>\n                            <Slider aria-labelledby=\"continuous-slider\" />\n                          </Grid>\n                        </Grid>\n                      </div>\n                  </div>\n                }\n                </div>\n            </div>\n          )\n          }\n          else\n          {\n            return(\n              <div>\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Show Spotify Controls</button>\n              </div>\n            )\n          }\n      }\n      else\n      {\n        return(\n          <div>\n            \n          </div>\n        )\n      }\n    }\n\n    export default SpotifyPlayer;","/home/julien/Rendu/ETP/React_Front2/src/components/three/TwitterBird.jsx",["244","245"],"import * as THREE from 'three'\nimport React, { useRef, Suspense, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber'\n\nfunction TwitterBird(props) {\n    const groupbird = useRef()\n    const { nodes, materials } = useGLTF('twitter.glb')\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    useFrame(() => {\n        groupbird.current.rotation.y = groupbird.current.rotation.y += 0.01;\n    });\n  \n    return (\n      <group ref={groupbird} {...props} dispose={null}>\n        <mesh \n          geometry={nodes.twitter.geometry} \n          rotation={[Math.PI / 2, 0, 0]}\n          onClick={(e) => setActive(!active)}\n          onPointerOver={(e) => setHover(true)}\n          onPointerOut={(e) => setHover(false)}>\n          <meshPhysicalMaterial color={hovered ? '#9cfffd' : '#00acee'} side={THREE.DoubleSide}/>\n        </mesh>\n      </group>\n    )\n}\n\nuseGLTF.preload('/Cottage.glb')\n    \nclass Twitter extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <TwitterBird position={[100, 100, 10]} rotation={[-0.5, 0.5, 0]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Twitter;","/home/julien/Rendu/ETP/React_Front2/src/components/three/AmericanFlag.jsx",["246"],"import React, { useRef, Component, Suspense } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\n\n//3D thanks : https://sketchfab.com/United4192\n\nfunction Flag(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('Americanflag.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh material={materials.FlagBrown} geometry={nodes.Post_Cylinder.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh material={materials.FlagRed} geometry={nodes.BlankFlag_Cube.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh\n        material={materials.FlagWhite}\n        geometry={nodes.WhiteStripes_Cube001.geometry}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh material={materials.FlagBlue} geometry={nodes.Blue_Cube002.geometry} rotation={[Math.PI / 2, 0, 0]} />\n      <mesh material={materials.FlagWhite} geometry={nodes.Stars_Plane.geometry} rotation={[Math.PI / 2, 0, 0]} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/Americanflag.glb')\n\nclass AmericanFlag extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <Flag position={[12, 20, 40]} scale={[3, 3, 3]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default AmericanFlag;","/home/julien/Rendu/ETP/React_Front2/src/components/three/Farm.jsx",["247","248"],"import React, { useRef, Suspense, Component } from 'react'\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\n\n//Checker react.useRef mais dans un component\n\n\nfunction Hut(props) {\n    const group = useRef()\n    const { nodes, materials, animations } = useGLTF('scene.gltf')\n    const { actions } = useAnimations(animations, group)\n    return (\n      <group ref={group} {...props} dispose={null}>\n        <group rotation={[-Math.PI / 2, 0, 0]}>\n          <group rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-502.64, 422.99, -132.71]}>\n              <group\n                name=\"������������_��������������_2\"\n                position={[-10.87, 231.34, -23.05]}\n                rotation={[Math.PI / 2, -0.91, -Math.PI]}>\n                <group position={[13.88, -40, -33.71]} rotation={[1.77, -0.46, -2.71]}>\n                  <mesh\n                    material={materials.material_2}\n                    geometry={nodes['������������_������_����������������2_0'].geometry}\n                  />\n                </group>\n                <mesh\n                  material={materials.material_2}\n                  geometry={nodes['������������_��������������_2_����������������2_0'].geometry}\n                />\n              </group>\n              <group position={[21.39, -295, 98.38]}>\n                <mesh\n                  material={materials.material}\n                  geometry={nodes['������������_������_2_����������������_0'].geometry}\n                />\n                <mesh\n                  material={materials.material}\n                  geometry={nodes['������������_������_2_����������������_0_1'].geometry}\n                />\n              </group>\n              <group position={[-10.52, 63.66, -75.33]} rotation={[Math.PI, 0, Math.PI]}>\n                <mesh material={materials.material_1} geometry={nodes['rr_����������������1_0'].geometry} />\n              </group>\n            </group>\n          </group>\n        </group>\n      </group>\n    )\n}\n\nuseGLTF.preload('/Cottage.glb')\n    \nclass Farm extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n            <Hut scale={[0.03, 0.03, 0.03]} position={[5.5, 5, -20]}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Farm;","/home/julien/Rendu/ETP/React_Front2/src/components/ui/Button.jsx",[],"/home/julien/Rendu/ETP/React_Front2/src/components/three/Feuillage.jsx",["249","250"],"import * as THREE from 'three'\nimport React, { useRef, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { a } from 'react-spring/three'\nimport getRandomInt from './utils/getRandomInt'\nimport randomBetween from './utils/randomBetween'\n\nfunction Feuillage(props, color, numbertrees, treepositions) {\n    let treepos = props.treepositions\n    const grouptrees = useRef();\n\n    //Basic expand state\n    const [expand, setExpand] = useState(false);\n  \n    return  (\n      <group ref={grouptrees}>\n        { treepos.map((d, index) =>  (\n        <a.mesh\n          position={[d.x, d.y, d.z]}\n          key={index}\n          onClick={() => setExpand(!expand)}\n          scale={[ 5, 15, 5 ]}\n          castShadow>\n          <coneBufferGeometry attach=\"geometry\" args={d.args} />\n          <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n        </a.mesh>\n      ))}\n      </group>\n    );\n}\n    \nclass Trees extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          trees: [\n            {x: 10, y: 8, z: 20}\n          ]\n        } \n    }\n    async componentDidMount() {\n      var treepositions = []\n      for (let i = 0; i < 300; i++) {\n          let treeNewPosX = randomBetween(45);\n          let treeNewPosZ = getRandomInt(45); \n          let object = {\n            x: treeNewPosX,\n            y: 8,\n            z: treeNewPosZ\n          } \n          treepositions.push(object)\n      }\n      this.setState({\n        trees: treepositions\n      })\n    }\n    render(){\n        return(\n            <Feuillage color={this.props.treecolor} treepositions={this.state.trees}/>\n        )\n    }\n}\n\nexport default Trees;","/home/julien/Rendu/ETP/React_Front2/src/components/three/Text.jsx",["251","252","253"],"import React, { useRef, useState, Component } from 'react'\nimport * as THREE from 'three'\nimport { useFrame } from 'react-three-fiber'\nimport JSONfont from \"../../fonts/Cocogoose.json\";\nimport JSONfontQ from \"../../fonts/LGCR.json\";\n\nfunction Town(props, text, position, night) {\n    const [hovered, setHover] = useState(false);\n    const mesh = useRef();\n    /*\n    let margin = 0;\n    for (let i=0; i < (props.text).length; i++ ){\n\n        margin = margin + 40\n    }\n    console.log(\"Margin \"+margin)*/\n\n    let color\n    if ( props.night == true ){\n        color = '#ffffff'\n    }\n    else{\n        color = '#37edcc'\n    }\n    // actions to perform in current frame\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n      mesh.current.geometry.center();\n    });\n    \n    // load in font\n    const font = new THREE.FontLoader().parse(JSONfont);\n  \n    // configure font mesh\n    const textOptions = {\n      font,\n      size: 100,\n      height: hovered ? 0 : 0\n    };\n    //qqch qui ne se fait pas dans le update !!!!!!!!!!!\n  \n    return (\n      <mesh\n        ref={mesh}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}\n        position={[0, 0, -300]}\n      >\n        <textGeometry  attach=\"geometry\" args={[props.text, textOptions]} />\n        <meshBasicMaterial color={hovered ? color : color} />\n      </mesh>\n    );\n}\n\nfunction Temperature(props, text, position, night) {\n  const [hovered, setHover] = useState(false);\n  const mesh = useRef();\n\n  /*\n  let margin = 0;\n  for (let i=0; i < (props.text).length; i++ ){\n\n      margin = margin + 40\n  }\n  console.log(\"Margin \"+margin)*/\n\n  let color\n  if ( props.night == true ){\n      color = '#ffffff'\n  }\n  else{\n      color = '#37edcc'\n  }\n  // actions to perform in current frame\n  useFrame(() => {\n    //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n    mesh.current.geometry.center();\n  });\n  \n  // load in font\n  const font = new THREE.FontLoader().parse(JSONfontQ);\n\n  // configure font mesh\n  const textOptions = {\n    font,\n    size: 100,\n    height: hovered ? 0 : 0\n  };\n  //qqch qui ne se fait pas dans le update !!!!!!!!!!!\n\n  return (\n    <mesh\n      ref={mesh}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}\n      position={[0, -150, -300]}\n    >\n      <textGeometry  attach=\"geometry\" args={[props.text, textOptions]} />\n      <meshBasicMaterial color={hovered ? color : color} />\n    </mesh>\n  );\n}\n\nclass Text extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n          <group>\n            <Town text={this.props.location} night={this.props.night}/>\n            <Temperature text={this.props.temperature} night={this.props.night}/>\n          </group>\n        )\n    }\n}\n\nexport default Text;","/home/julien/Rendu/ETP/React_Front2/src/components/three/Disc.jsx",["254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { useRef, Suspense, Component, useState, useContext, createContext } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber'\nimport { connect } from 'react-redux'\nimport * as THREE from 'three'\nimport {Howl, Howler} from 'howler';\nimport ReactHowler from 'react-howler'\nimport ThreeContext from '../../context'\nimport { BearCounter, useStore } from '../../zustand'\n\n\n//credit 3D https://sketchfab.com/ilyafom1\n//credits https://www.youtube.com/watch?v=5ZCtTdwc4GI\n\nfunction Vinyl(props) {\n  const groupradio = useRef()\n  const { nodes, materials } = useGLTF('3DAssets/scene.gltf')\n  const [active, setActive] = useState(false)\n\n  useFrame(() => {\n    groupradio.current.rotation.y = groupradio.current.rotation.y += 0.01;\n  });\n\n  const state = useStore.getState()\n  \n  function Clicked(){\n      const state = useStore.getState()\n      props.updatePlayer()\n  }\n\n  return (\n    <group \n    ref={groupradio} \n    {...props} \n    dispose={null}\n    >\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}\n        scale={active ? [1.25, 1.25, 1.25] : [1, 1, 1]}\n        onPointerOver={(e) => setActive(!active)}\n        onPointerOut={(e) => setActive(!active)}\n        onClick={Clicked}\n         >\n          <mesh material={materials['Material.001']} geometry={nodes.defaultMaterial.geometry} />\n          <mesh material={materials['Material.005']} geometry={nodes.defaultMaterial_1.geometry} />\n          <mesh material={materials['Material.004']} geometry={nodes.defaultMaterial_2.geometry} />\n          <mesh material={materials['Material.006']} geometry={nodes.defaultMaterial_3.geometry} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('3DAssets/scene.gltf')\n\n\nconst Disc = (props) => {\n      return(\n          <group>\n              <Suspense fallback={null}>\n                <Vinyl position={[-100, 100, 10]} scale={[3, 3, 3]} updatePlayer={props.updatePlayer}/>\n              </Suspense>\n          </group>\n      )\n}\n\nexport default Disc;","/home/julien/Rendu/ETP/React_Front2/src/components/three/Map.jsx",["266","267","268","269"],"import React, { useRef, useState, Component } from 'react'\nimport { useFrame } from 'react-three-fiber'\n\nfunction Terrain(props, terraincolor) {\n    // This reference will give us direct access to the mesh\n    const meshterrain = useRef()\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n    return (\n      <mesh\n        {...props}\n        ref={meshterrain}\n        scale={active ? [1, 1, 1] : [1, 1, 1]}\n        onClick={(e) => setActive(!active)}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}>\n        <boxBufferGeometry args={[105, 3, 105]} />\n        <meshStandardMaterial color={props.terraincolor} />\n      </mesh>\n    )\n}\n\nfunction CornField(props, fieldcolor) {\n  // This reference will give us direct access to the mesh\n  const meshfield = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n  return (\n    <mesh\n      {...props}\n      ref={meshfield}\n      scale={active ? [1, 1, 1] : [1, 1, 1]}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <boxBufferGeometry args={[10, 4,40]} />\n      <meshStandardMaterial color={props.fieldcolor} opacity={[0.9]} transparent={[true]} />\n    </mesh>\n  )\n}\n\nfunction Road(props, roadcolor) {\n    // This reference will give us direct access to the mesh\n    const meshfield = useRef()\n\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n    return (\n      <mesh\n        {...props}\n        ref={meshfield}\n        scale={active ? [1, 1, 1] : [1, 1, 1]}\n        onClick={(e) => setActive(!active)}\n        onPointerOver={(e) => setHover(true)}\n        onPointerOut={(e) => setHover(false)}>\n        <boxBufferGeometry args={[5, 0.3, 64]} />\n        <meshStandardMaterial color={props.roadcolor} />\n      </mesh>\n    )\n  }\n\nclass Map extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <group>\n                <Terrain \n                    position={[0, 0, 0]} \n                    terraincolor = {this.props.terraincolor}\n                />\n                <CornField position={[-3, 2, 20]} fieldcolor={this.props.fieldcolor}/>\n                <Road position={[5, 2, 20]} roadcolor={this.props.roadcolor}/>\n            </group>\n        )\n    }\n}\n\nexport default Map;","/home/julien/Rendu/ETP/React_Front2/src/components/three/Mist.jsx",["270","271","272"],"import * as THREE from 'three'\nimport React, { useRef, Component, useState } from 'react'\nimport { a } from 'react-spring/three'\nimport getRandomInt from './utils/getRandomInt'\n\nfunction Mist(props, mistTrue) {\n    var numbermist\n    var mistpositions = []\n    if ( props.mistTrue == 1){\n        numbermist = 100\n        for (let i = 0; i < numbermist; i++) {\n            let mistNewPosX = getRandomInt(45);\n            let mistNewPosY = getRandomInt(25)+10; \n            let mistNewPosZ = getRandomInt(45);\n            let object = {\n            x: mistNewPosX,\n            y: mistNewPosY,\n            z: mistNewPosZ\n            } \n            mistpositions.push(object)\n        }\n    }\n    else\n    {\n        numbermist = 0\n        mistpositions = []\n    }\n\n    const groupmist = useRef();\n\n    //Basic expand state\n    const [expand, setExpand] = useState(false);\n  \n    return  (\n      <group ref={groupmist}>\n        { mistpositions.map((d, index) =>  (\n        <a.mesh\n          position={[d.x, d.y, d.z]}\n          key={index}\n          onClick={() => setExpand(!expand)}\n          scale={[ 20, 10, 20 ]}\n          castShadow>\n          <boxBufferGeometry attach=\"geometry\" args={d.args} />\n          <a.meshPhysicalMaterial attach=\"material\" color={'#ffffff'} opacity={0.1} transparent={true} />\n        </a.mesh>\n      ))}\n      </group>\n    );\n}\n    \nclass Trees extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <Mist mistTrue={this.props.mistTrue}/>\n        )\n    }\n}\n\nexport default Trees;","/home/julien/Rendu/ETP/React_Front2/src/reducers/index.js",[],"/home/julien/Rendu/ETP/React_Front2/src/zustand.js",["273"],"/home/julien/Rendu/ETP/React_Front2/src/services/auth.service.js",[],"/home/julien/Rendu/ETP/React_Front2/src/services/user.service.js",[],"/home/julien/Rendu/ETP/React_Front2/src/actions/types.js",[],"/home/julien/Rendu/ETP/React_Front2/src/components/three/utils/getRandomInt.js",[],"/home/julien/Rendu/ETP/React_Front2/src/components/three/utils/randomBetween.js",[],"/home/julien/Rendu/ETP/React_Front2/src/reducers/auth.js",["274"],"/home/julien/Rendu/ETP/React_Front2/src/reducers/message.js",["275"],"/home/julien/Rendu/ETP/React_Front2/src/services/auth-header.js",[],{"ruleId":"276","severity":1,"message":"277","line":6,"column":10,"nodeType":"278","messageId":"279","endLine":6,"endColumn":19},{"ruleId":"276","severity":1,"message":"280","line":41,"column":10,"nodeType":"278","messageId":"279","endLine":41,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":126,"column":36,"nodeType":"283","messageId":"284","endLine":126,"endColumn":38},{"ruleId":"281","severity":1,"message":"282","line":140,"column":26,"nodeType":"283","messageId":"284","endLine":140,"endColumn":28},{"ruleId":"281","severity":1,"message":"282","line":166,"column":26,"nodeType":"283","messageId":"284","endLine":166,"endColumn":28},{"ruleId":"285","severity":1,"message":"286","line":184,"column":9,"nodeType":"287","messageId":"284","endLine":184,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":217,"column":30,"nodeType":"283","messageId":"284","endLine":217,"endColumn":32},{"ruleId":"281","severity":1,"message":"282","line":232,"column":38,"nodeType":"283","messageId":"284","endLine":232,"endColumn":40},{"ruleId":"276","severity":1,"message":"288","line":275,"column":12,"nodeType":"278","messageId":"279","endLine":275,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":275,"column":47,"nodeType":"291","messageId":"292","endLine":275,"endColumn":49},{"ruleId":"281","severity":1,"message":"282","line":296,"column":29,"nodeType":"283","messageId":"284","endLine":296,"endColumn":31},{"ruleId":"276","severity":1,"message":"288","line":320,"column":13,"nodeType":"278","messageId":"279","endLine":320,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":320,"column":48,"nodeType":"291","messageId":"292","endLine":320,"endColumn":50},{"ruleId":"276","severity":1,"message":"293","line":337,"column":46,"nodeType":"278","messageId":"279","endLine":337,"endColumn":60},{"ruleId":"294","severity":1,"message":"295","line":378,"column":69,"nodeType":"296","endLine":378,"endColumn":79},{"ruleId":"294","severity":1,"message":"295","line":384,"column":64,"nodeType":"296","endLine":384,"endColumn":74},{"ruleId":"276","severity":1,"message":"297","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":5,"column":1,"nodeType":"300","endLine":9,"endColumn":3},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"276","severity":1,"message":"305","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":18},{"ruleId":"276","severity":1,"message":"306","line":1,"column":28,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"307","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"308","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":21},{"ruleId":"276","severity":1,"message":"305","line":5,"column":23,"nodeType":"278","messageId":"279","endLine":5,"endColumn":31},{"ruleId":"281","severity":1,"message":"282","line":80,"column":59,"nodeType":"283","messageId":"284","endLine":80,"endColumn":61},{"ruleId":"281","severity":1,"message":"309","line":83,"column":28,"nodeType":"283","messageId":"284","endLine":83,"endColumn":30},{"ruleId":"276","severity":1,"message":"310","line":1,"column":46,"nodeType":"278","messageId":"279","endLine":1,"endColumn":56},{"ruleId":"276","severity":1,"message":"311","line":1,"column":58,"nodeType":"278","messageId":"279","endLine":1,"endColumn":65},{"ruleId":"276","severity":1,"message":"312","line":2,"column":13,"nodeType":"278","messageId":"279","endLine":2,"endColumn":18},{"ruleId":"276","severity":1,"message":"313","line":4,"column":50,"nodeType":"278","messageId":"279","endLine":4,"endColumn":67},{"ruleId":"276","severity":1,"message":"314","line":6,"column":8,"nodeType":"278","messageId":"279","endLine":6,"endColumn":16},{"ruleId":"276","severity":1,"message":"315","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"316","line":18,"column":8,"nodeType":"278","messageId":"279","endLine":18,"endColumn":20},{"ruleId":"276","severity":1,"message":"317","line":107,"column":5,"nodeType":"278","messageId":"279","endLine":107,"endColumn":17},{"ruleId":"276","severity":1,"message":"318","line":108,"column":7,"nodeType":"278","messageId":"279","endLine":108,"endColumn":18},{"ruleId":"276","severity":1,"message":"319","line":109,"column":7,"nodeType":"278","messageId":"279","endLine":109,"endColumn":19},{"ruleId":"281","severity":1,"message":"282","line":294,"column":11,"nodeType":"283","messageId":"284","endLine":294,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":297,"column":16,"nodeType":"283","messageId":"284","endLine":297,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":300,"column":16,"nodeType":"283","messageId":"284","endLine":300,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":303,"column":16,"nodeType":"283","messageId":"284","endLine":303,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":306,"column":16,"nodeType":"283","messageId":"284","endLine":306,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":309,"column":16,"nodeType":"283","messageId":"284","endLine":309,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":312,"column":16,"nodeType":"283","messageId":"284","endLine":312,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":321,"column":15,"nodeType":"283","messageId":"284","endLine":321,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":322,"column":13,"nodeType":"283","messageId":"284","endLine":322,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":325,"column":18,"nodeType":"283","messageId":"284","endLine":325,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":328,"column":18,"nodeType":"283","messageId":"284","endLine":328,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":331,"column":18,"nodeType":"283","messageId":"284","endLine":331,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":334,"column":18,"nodeType":"283","messageId":"284","endLine":334,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":337,"column":18,"nodeType":"283","messageId":"284","endLine":337,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":340,"column":18,"nodeType":"283","messageId":"284","endLine":340,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":355,"column":15,"nodeType":"283","messageId":"284","endLine":355,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":356,"column":13,"nodeType":"283","messageId":"284","endLine":356,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":359,"column":18,"nodeType":"283","messageId":"284","endLine":359,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":362,"column":18,"nodeType":"283","messageId":"284","endLine":362,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":365,"column":18,"nodeType":"283","messageId":"284","endLine":365,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":368,"column":18,"nodeType":"283","messageId":"284","endLine":368,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":371,"column":18,"nodeType":"283","messageId":"284","endLine":371,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":374,"column":18,"nodeType":"283","messageId":"284","endLine":374,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":388,"column":11,"nodeType":"283","messageId":"284","endLine":388,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":419,"column":20,"nodeType":"283","messageId":"284","endLine":419,"endColumn":22},{"ruleId":"320","severity":1,"message":"321","line":500,"column":56,"nodeType":"322","messageId":"323","endLine":500,"endColumn":57},{"ruleId":"276","severity":1,"message":"306","line":2,"column":28,"nodeType":"278","messageId":"279","endLine":2,"endColumn":36},{"ruleId":"276","severity":1,"message":"324","line":2,"column":38,"nodeType":"278","messageId":"279","endLine":2,"endColumn":47},{"ruleId":"294","severity":1,"message":"295","line":66,"column":72,"nodeType":"296","endLine":66,"endColumn":82},{"ruleId":"294","severity":1,"message":"295","line":74,"column":50,"nodeType":"296","endLine":74,"endColumn":60},{"ruleId":"276","severity":1,"message":"325","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":17},{"ruleId":"276","severity":1,"message":"326","line":30,"column":12,"nodeType":"278","messageId":"279","endLine":30,"endColumn":22},{"ruleId":"276","severity":1,"message":"327","line":32,"column":12,"nodeType":"278","messageId":"279","endLine":32,"endColumn":31},{"ruleId":"276","severity":1,"message":"328","line":32,"column":33,"nodeType":"278","messageId":"279","endLine":32,"endColumn":55},{"ruleId":"276","severity":1,"message":"329","line":34,"column":12,"nodeType":"278","messageId":"279","endLine":34,"endColumn":27},{"ruleId":"276","severity":1,"message":"330","line":34,"column":29,"nodeType":"278","messageId":"279","endLine":34,"endColumn":48},{"ruleId":"276","severity":1,"message":"331","line":35,"column":12,"nodeType":"278","messageId":"279","endLine":35,"endColumn":24},{"ruleId":"276","severity":1,"message":"332","line":56,"column":14,"nodeType":"278","messageId":"279","endLine":56,"endColumn":19},{"ruleId":"276","severity":1,"message":"333","line":71,"column":13,"nodeType":"278","messageId":"279","endLine":71,"endColumn":18},{"ruleId":"281","severity":1,"message":"309","line":211,"column":21,"nodeType":"283","messageId":"284","endLine":211,"endColumn":23},{"ruleId":"281","severity":1,"message":"309","line":212,"column":19,"nodeType":"283","messageId":"284","endLine":212,"endColumn":21},{"ruleId":"276","severity":1,"message":"334","line":8,"column":20,"nodeType":"278","messageId":"279","endLine":8,"endColumn":29},{"ruleId":"335","severity":1,"message":"336","line":34,"column":5,"nodeType":"337","messageId":"338","endLine":36,"endColumn":6},{"ruleId":"335","severity":1,"message":"336","line":27,"column":5,"nodeType":"337","messageId":"338","endLine":29,"endColumn":6},{"ruleId":"276","severity":1,"message":"339","line":11,"column":13,"nodeType":"278","messageId":"279","endLine":11,"endColumn":20},{"ruleId":"335","severity":1,"message":"336","line":55,"column":5,"nodeType":"337","messageId":"338","endLine":57,"endColumn":6},{"ruleId":"276","severity":1,"message":"312","line":1,"column":13,"nodeType":"278","messageId":"279","endLine":1,"endColumn":18},{"ruleId":"276","severity":1,"message":"340","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":19,"column":22,"nodeType":"283","messageId":"284","endLine":19,"endColumn":24},{"ruleId":"281","severity":1,"message":"282","line":68,"column":20,"nodeType":"283","messageId":"284","endLine":68,"endColumn":22},{"ruleId":"335","severity":1,"message":"336","line":105,"column":5,"nodeType":"337","messageId":"338","endLine":107,"endColumn":6},{"ruleId":"276","severity":1,"message":"297","line":1,"column":35,"nodeType":"278","messageId":"279","endLine":1,"endColumn":44},{"ruleId":"276","severity":1,"message":"310","line":1,"column":56,"nodeType":"278","messageId":"279","endLine":1,"endColumn":66},{"ruleId":"276","severity":1,"message":"341","line":1,"column":68,"nodeType":"278","messageId":"279","endLine":1,"endColumn":81},{"ruleId":"276","severity":1,"message":"325","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"312","line":5,"column":13,"nodeType":"278","messageId":"279","endLine":5,"endColumn":18},{"ruleId":"276","severity":1,"message":"342","line":6,"column":9,"nodeType":"278","messageId":"279","endLine":6,"endColumn":13},{"ruleId":"276","severity":1,"message":"343","line":6,"column":15,"nodeType":"278","messageId":"279","endLine":6,"endColumn":21},{"ruleId":"276","severity":1,"message":"315","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":19},{"ruleId":"276","severity":1,"message":"344","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":20},{"ruleId":"276","severity":1,"message":"308","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":21},{"ruleId":"276","severity":1,"message":"345","line":24,"column":9,"nodeType":"278","messageId":"279","endLine":24,"endColumn":14},{"ruleId":"276","severity":1,"message":"345","line":27,"column":13,"nodeType":"278","messageId":"279","endLine":27,"endColumn":18},{"ruleId":"276","severity":1,"message":"346","line":8,"column":12,"nodeType":"278","messageId":"279","endLine":8,"endColumn":19},{"ruleId":"276","severity":1,"message":"346","line":32,"column":10,"nodeType":"278","messageId":"279","endLine":32,"endColumn":17},{"ruleId":"276","severity":1,"message":"346","line":57,"column":12,"nodeType":"278","messageId":"279","endLine":57,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":78,"column":5,"nodeType":"337","messageId":"338","endLine":80,"endColumn":6},{"ruleId":"276","severity":1,"message":"312","line":1,"column":13,"nodeType":"278","messageId":"279","endLine":1,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":9,"column":25,"nodeType":"283","messageId":"284","endLine":9,"endColumn":27},{"ruleId":"335","severity":1,"message":"336","line":52,"column":5,"nodeType":"337","messageId":"338","endLine":54,"endColumn":6},{"ruleId":"276","severity":1,"message":"347","line":1,"column":8,"nodeType":"278","messageId":"279","endLine":1,"endColumn":13},{"ruleId":"298","severity":1,"message":"348","line":15,"column":3,"nodeType":"300","endLine":50,"endColumn":4},{"ruleId":"298","severity":1,"message":"348","line":5,"column":1,"nodeType":"300","endLine":18,"endColumn":2},"no-unused-vars","'MyContext' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'numberclouds'.","ObjectExpression","'radioCleaned' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'showAdminBoard' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["349"],"no-negated-in-lhs",["350"],"'useStore' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'BearCounter' is defined but never used.","Expected '!==' and instead saw '!='.","'useContext' is defined but never used.","'context' is defined but never used.","'THREE' is defined but never used.","'PerspectiveCamera' is defined but never used.","'JSONfont' is defined but never used.","'ReactHowler' is defined but never used.","'AmericanFlag' is defined but never used.","'forestNumber' is assigned a value but never used.","'numbertrees' is assigned a value but never used.","'numberclouds' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'connect' is defined but never used.","'inPlaylist' is assigned a value but never used.","'songCurrentlyPlayed' is assigned a value but never used.","'setSongCurrentlyPlayed' is assigned a value but never used.","'currentPlaylist' is assigned a value but never used.","'setCurresntPlaylist' is assigned a value but never used.","'allPlaylists' is assigned a value but never used.","'timer' is defined but never used.","'timer' is assigned a value but never used.","'materials' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is assigned a value but never used.","'useGLTF' is defined but never used.","'createContext' is defined but never used.","'Howl' is defined but never used.","'Howler' is defined but never used.","'ThreeContext' is defined but never used.","'state' is assigned a value but never used.","'hovered' is assigned a value but never used.","'React' is defined but never used.","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation"]