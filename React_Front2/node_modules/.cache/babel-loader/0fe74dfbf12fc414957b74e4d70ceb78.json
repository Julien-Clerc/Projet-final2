{"ast":null,"code":"var _jsxFileName = \"/home/julien/Rendu/ETP/React_Front/src/Components/three/Feuillage.jsx\",\n    _s = $RefreshSig$();\n\nimport * as THREE from 'three';\nimport React, { useRef, Component, useState } from 'react';\nimport { useGLTF } from \"@react-three/drei\";\nimport { a } from 'react-spring/three';\nimport getRandomInt from './utils/getRandomInt';\nimport randomBetween from './utils/randomBetween';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feuillage(props, color, numbertrees) {\n  _s();\n\n  console.log(props.color);\n  var treepositions = [];\n\n  for (let i = 0; i < props.numbertrees; i++) {\n    let treeNewPosX = randomBetween(45);\n    let treeNewPosZ = getRandomInt(45);\n    let object = {\n      x: treeNewPosX,\n      y: 8,\n      z: treeNewPosZ\n    };\n    treepositions.push(object);\n  }\n\n  console.log(\"TREEPOSITIONS :\" + treepositions);\n  const grouptrees = useRef(); //Basic expand state\n\n  const [expand, setExpand] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: grouptrees,\n    children: treepositions.map((d, index) => /*#__PURE__*/_jsxDEV(a.mesh, {\n      position: [d.x, d.y, d.z],\n      onClick: () => setExpand(!expand),\n      scale: [5, 15, 5],\n      castShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"coneBufferGeometry\", {\n        attach: \"geometry\",\n        args: d.args\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(a.meshPhysicalMaterial, {\n        attach: \"material\",\n        color: props.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Feuillage, \"LMkqy/7gpQ9w5FGnKROP9/wIR8s=\");\n\n_c = Feuillage;\nuseGLTF.preload('/Cottage.glb');\n\nclass Trees extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Feuillage, {\n      numbertrees: 100,\n      color: this.props.treecolor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Trees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feuillage\");","map":{"version":3,"sources":["/home/julien/Rendu/ETP/React_Front/src/Components/three/Feuillage.jsx"],"names":["THREE","React","useRef","Component","useState","useGLTF","a","getRandomInt","randomBetween","Feuillage","props","color","numbertrees","console","log","treepositions","i","treeNewPosX","treeNewPosZ","object","x","y","z","push","grouptrees","expand","setExpand","map","d","index","args","preload","Trees","constructor","render","treecolor"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,CAAT,QAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,WAAjC,EAA8C;AAAA;;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,KAAlB;AAEA,MAAII,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACE,WAA1B,EAAuCI,CAAC,EAAxC,EAA4C;AACxC,QAAIC,WAAW,GAAGT,aAAa,CAAC,EAAD,CAA/B;AACA,QAAIU,WAAW,GAAGX,YAAY,CAAC,EAAD,CAA9B;AACA,QAAIY,MAAM,GAAG;AACXC,MAAAA,CAAC,EAAEH,WADQ;AAEXI,MAAAA,CAAC,EAAE,CAFQ;AAGXC,MAAAA,CAAC,EAAEJ;AAHQ,KAAb;AAKAH,IAAAA,aAAa,CAACQ,IAAd,CAAmBJ,MAAnB;AACH;;AAGDN,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBC,aAA9B;AACA,QAAMS,UAAU,GAAGtB,MAAM,EAAzB,CAjB0C,CAmB1C;;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACE;AAAO,IAAA,GAAG,EAAEoB,UAAZ;AAAA,cACIT,aAAa,CAACY,GAAd,CAAkB,CAACC,CAAD,EAAIC,KAAJ,kBACpB,QAAC,CAAD,CAAG,IAAH;AACE,MAAA,QAAQ,EAAE,CAACD,CAAC,CAACR,CAAH,EAAMQ,CAAC,CAACP,CAAR,EAAWO,CAAC,CAACN,CAAb,CADZ;AAGE,MAAA,OAAO,EAAE,MAAMI,SAAS,CAAC,CAACD,MAAF,CAH1B;AAIE,MAAA,KAAK,EAAE,CAAE,CAAF,EAAK,EAAL,EAAS,CAAT,CAJT;AAKE,MAAA,UAAU,MALZ;AAAA,8BAME;AAAoB,QAAA,MAAM,EAAC,UAA3B;AAAsC,QAAA,IAAI,EAAEG,CAAC,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,CAAD,CAAG,oBAAH;AAAwB,QAAA,MAAM,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAEpB,KAAK,CAACC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAEOkB,KAFP;AAAA;AAAA;AAAA;AAAA,YADE;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeH;;GArCQpB,S;;KAAAA,S;AAuCTJ,OAAO,CAAC0B,OAAR,CAAgB,cAAhB;;AAEA,MAAMC,KAAN,SAAoB7B,SAApB,CAA8B;AAC1B8B,EAAAA,WAAW,CAACvB,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDwB,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,GAAxB;AAA6B,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWyB;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AARyB;;AAW9B,eAAeH,KAAf","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { a } from 'react-spring/three'\nimport getRandomInt from './utils/getRandomInt'\nimport randomBetween from './utils/randomBetween'\n\nfunction Feuillage(props, color, numbertrees) {\n    console.log(props.color)\n\n    var treepositions = []\n    for (let i = 0; i < props.numbertrees; i++) {\n        let treeNewPosX = randomBetween(45);\n        let treeNewPosZ = getRandomInt(45); \n        let object = {\n          x: treeNewPosX,\n          y: 8,\n          z: treeNewPosZ\n        } \n        treepositions.push(object)\n    }\n\n    \n    console.log(\"TREEPOSITIONS :\"+treepositions)\n    const grouptrees = useRef();\n\n    //Basic expand state\n    const [expand, setExpand] = useState(false);\n  \n    return  (\n      <group ref={grouptrees}>\n        { treepositions.map((d, index) =>  (\n        <a.mesh\n          position={[d.x, d.y, d.z]}\n          key={index}\n          onClick={() => setExpand(!expand)}\n          scale={[ 5, 15, 5 ]}\n          castShadow>\n          <coneBufferGeometry attach=\"geometry\" args={d.args} />\n          <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n        </a.mesh>\n      ))}\n      </group>\n    );\n}\n\nuseGLTF.preload('/Cottage.glb')\n    \nclass Trees extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <Feuillage numbertrees={100} color={this.props.treecolor}/>\n        )\n    }\n}\n\nexport default Trees;"]},"metadata":{},"sourceType":"module"}