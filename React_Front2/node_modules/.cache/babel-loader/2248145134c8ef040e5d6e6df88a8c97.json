{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/radio/Player.jsx\";\nimport { useStore } from '../../zustand';\nimport ReactHowler from 'react-howler';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Getdata = () => {\n      const statez = useStore.getState();\n\n      if (statez.playing == this.state.playing) {\n        this.setState({\n          playing: statez.playing\n        });\n      }\n\n      console.log(\"Player radio updated --\");\n      console.log(\"PLAYER radio state \" + this.state.playing);\n      console.log(\"PLAYER radio store \" + statez.playing);\n      return true;\n    };\n\n    this.state = {\n      bears: 0,\n      playing: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate through 1');\n    this.Getdata();\n    return this.props.hintPlayerUpdate != nextProps.hintPlayerUpdate;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(ReactHowler, {\n        src: \"http://jazzradio.ice.infomaniak.ch/jazzradio-high.mp3\",\n        format: ['mp3', 'aac'],\n        html5: true,\n        playing: this.state.playing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/radio/Player.jsx"],"names":["useStore","ReactHowler","React","Component","Player","constructor","props","Getdata","statez","getState","playing","state","setState","console","log","bears","shouldComponentUpdate","nextProps","nextState","hintPlayerUpdate","render"],"mappings":";AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOnBC,OAPmB,GAOT,MAAM;AACX,YAAMC,MAAM,GAAGR,QAAQ,CAACS,QAAT,EAAf;;AACA,UAAKD,MAAM,CAACE,OAAP,IAAkB,KAAKC,KAAL,CAAWD,OAAlC,EAA4C;AACxC,aAAKE,QAAL,CAAc;AACVF,UAAAA,OAAO,EAAEF,MAAM,CAACE;AADN,SAAd;AAGH;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKH,KAAL,CAAWD,OAA/C;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBN,MAAM,CAACE,OAA3C;AAEA,aAAO,IAAP;AACL,KAnBmB;;AAEd,SAAKC,KAAL,GAAa;AACTI,MAAAA,KAAK,EAAE,CADE;AAETL,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAcHM,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACzCL,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,SAAKP,OAAL;AACA,WAAO,KAAKD,KAAL,CAAWa,gBAAX,IAA+BF,SAAS,CAACE,gBAAhD;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACQ,QAAC,WAAD;AACA,QAAA,GAAG,EAAC,uDADJ;AAEA,QAAA,MAAM,EAAG,CAAC,KAAD,EAAQ,KAAR,CAFT;AAGA,QAAA,KAAK,EAAE,IAHP;AAIA,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWD;AAJpB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADJ;AAUD;;AArC4B;;AAuC/B,eAAeN,MAAf","sourcesContent":["import { useStore } from '../../zustand'\nimport ReactHowler from 'react-howler'\nimport React, { Component } from 'react'\n\nclass Player extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            bears: 0,\n            playing: false\n        }\n    }\n   Getdata = () => {\n        const statez = useStore.getState()\n        if ( statez.playing == this.state.playing ) {\n            this.setState({\n                playing: statez.playing\n            })\n        }\n        console.log(\"Player radio updated --\")\n        console.log(\"PLAYER radio state \" + this.state.playing)\n        console.log(\"PLAYER radio store \" + statez.playing)\n\n        return true\n  }\n  shouldComponentUpdate(nextProps, nextState){\n    console.log('shouldComponentUpdate through 1')\n    this.Getdata()\n    return this.props.hintPlayerUpdate != nextProps.hintPlayerUpdate \n  }\n  render(){\n    return (\n        <div className=\"player\">\n                <ReactHowler\n                src='http://jazzradio.ice.infomaniak.ch/jazzradio-high.mp3'\n                format= {['mp3', 'aac']}\n                html5={true}\n                playing={this.state.playing}\n                />\n        </div>\n    );\n  }\n}\nexport default Player\n\n"]},"metadata":{},"sourceType":"module"}