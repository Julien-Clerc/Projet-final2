{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/Radio.jsx\";\nimport React, { Component } from 'react';\nimport Button from './ui/Button.jsx';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { BearCounter, useStore } from '../zustand';\nimport Notification from \"./ui/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Radio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      this.setState({\n        newUrl: event.target.value\n      });\n    };\n\n    this.state = {\n      playing: false,\n      newUrl: \"\",\n      alertNotValid: \"heyyyyy\"\n    };\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n  }\n\n  handlePlay() {\n    this.props.updatePlayer();\n  }\n\n  handlePause() {\n    this.props.updatePlayer();\n  }\n\n  render() {\n    const {\n      user: currentUser\n    } = this.props;\n    console.log(\"CURRENT USER : \" + JSON.stringify(currentUser));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        notification: this.state.alertNotValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handlePlay,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handlePause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"URL :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), \"Nom :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), \"Nom abbr\\xE9g\\xE9 ( 3 lettres max ):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"newUrl : \", this.state.newUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    user\n  } = state.auth;\n  return {\n    user\n  };\n}\n\nexport default connect(mapStateToProps)(Radio);","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/Radio.jsx"],"names":["React","Component","Button","Redirect","connect","BearCounter","useStore","Notification","Radio","constructor","props","myChangeHandler","event","setState","newUrl","target","value","state","playing","alertNotValid","handlePlay","bind","handlePause","updatePlayer","render","user","currentUser","console","log","JSON","stringify","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,YAAtC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAgBpBC,eAhBoB,GAgBDC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAtB,OAAd;AACH,KAlBmB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXJ,MAAAA,MAAM,EAAE,EAFG;AAGXK,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDD,EAAAA,UAAU,GAAI;AACV,SAAKV,KAAL,CAAWa,YAAX;AACH;;AACDD,EAAAA,WAAW,GAAI;AACX,SAAKZ,KAAL,CAAWa,YAAX;AACH;;AAIDC,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAwB,KAAKhB,KAAnC;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAA9B;AACA,wBACE;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWE;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BACA;AAAA,2CAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,KAAxB;AAA8B,YAAA,QAAQ,EAAE,KAAKX;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAFJ,wBAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,KAAxB;AAA8B,YAAA,QAAQ,EAAE,KAAKA;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAJJ,uDAMI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,KAAxB;AAA8B,YAAA,QAAQ,EAAE,KAAKA;AAA7C;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAA,gCAAa,KAAKM,KAAL,CAAWH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBH;;AAzCyB;;AA4C9B,SAASiB,eAAT,CAAyBd,KAAzB,EAAgC;AAC5B,QAAM;AAAEQ,IAAAA;AAAF,MAAWR,KAAK,CAACe,IAAvB;AACA,SAAO;AACLP,IAAAA;AADK,GAAP;AAGH;;AAGD,eAAerB,OAAO,CAAC2B,eAAD,CAAP,CAAyBvB,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from './ui/Button.jsx'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { BearCounter, useStore } from '../zustand'\nimport Notification from \"./ui/Notification\"\n\nclass Radio extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n          playing: false,\n          newUrl: \"\",\n          alertNotValid: \"heyyyyy\"\n        }\n        this.handlePlay = this.handlePlay.bind(this)\n        this.handlePause = this.handlePause.bind(this)\n    }\n    handlePlay () {\n        this.props.updatePlayer()\n    }\n    handlePause () {\n        this.props.updatePlayer()\n    }\n    myChangeHandler = (event) => {\n        this.setState({newUrl: event.target.value});\n    }\n    render () {\n        const { user: currentUser } = this.props;\n        console.log(\"CURRENT USER : \"+JSON.stringify(currentUser)   )\n        return (\n          <div>\n            <Notification notification={this.state.alertNotValid}/>\n            <Button onClick={this.handlePlay}>Play</Button>\n            <Button onClick={this.handlePause}>Pause</Button>\n            <form>\n            <label>\n                URL :\n                <input type=\"text\" name=\"url\" onChange={this.myChangeHandler}/>\n                Nom :\n                <input type=\"text\" name=\"url\" onChange={this.myChangeHandler}/>\n                Nom abbrégé ( 3 lettres max ):\n                <input type=\"text\" name=\"url\" onChange={this.myChangeHandler}/>\n            </label>\n            </form>\n            <p>newUrl : {this.state.newUrl}</p>\n          </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state.auth;\n    return {\n      user,\n    };\n}\n  \n\nexport default connect(mapStateToProps)(Radio)"]},"metadata":{},"sourceType":"module"}