{"ast":null,"code":"import { VISIBILITY_FILTERS } from \"../constants\";\nexport const getRadiosState = store => store.todos;\nexport const getRadioList = store => getRadiosState(store) ? getRadiosState(store).allIds : [];\nexport const getRadioById = (store, id) => getRadiosState(store) ? { ...getRadiosState(store).byIds[id],\n  id\n} : {};\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\n\nexport const getRadios = store => getRadioList(store).map(id => getRadioById(store, id));\nexport const getRadiosByVisibilityFilter = (store, visibilityFilter) => {\n  const allRadios = getRadios(store);\n\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allRadios.filter(todo => todo.completed);\n\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allRadios.filter(todo => !todo.completed);\n\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allRadios;\n  }\n};","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/selectors/getRadiosByVisibilityFilter.js"],"names":["VISIBILITY_FILTERS","getRadiosState","store","todos","getRadioList","allIds","getRadioById","id","byIds","getRadios","map","getRadiosByVisibilityFilter","visibilityFilter","allRadios","COMPLETED","filter","todo","completed","INCOMPLETE","ALL"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAtC;AAEP,OAAO,MAAMC,YAAY,GAAGF,KAAK,IAC/BD,cAAc,CAACC,KAAD,CAAd,GAAwBD,cAAc,CAACC,KAAD,CAAd,CAAsBG,MAA9C,GAAuD,EADlD;AAGP,OAAO,MAAMC,YAAY,GAAG,CAACJ,KAAD,EAAQK,EAAR,KAC1BN,cAAc,CAACC,KAAD,CAAd,GAAwB,EAAE,GAAGD,cAAc,CAACC,KAAD,CAAd,CAAsBM,KAAtB,CAA4BD,EAA5B,CAAL;AAAsCA,EAAAA;AAAtC,CAAxB,GAAqE,EADhE;AAGP;AACA;AACA;AACA;;AACA,OAAO,MAAME,SAAS,GAAGP,KAAK,IAC5BE,YAAY,CAACF,KAAD,CAAZ,CAAoBQ,GAApB,CAAwBH,EAAE,IAAID,YAAY,CAACJ,KAAD,EAAQK,EAAR,CAA1C,CADK;AAGP,OAAO,MAAMI,2BAA2B,GAAG,CAACT,KAAD,EAAQU,gBAAR,KAA6B;AACtE,QAAMC,SAAS,GAAGJ,SAAS,CAACP,KAAD,CAA3B;;AACA,UAAQU,gBAAR;AACE,SAAKZ,kBAAkB,CAACc,SAAxB;AACE,aAAOD,SAAS,CAACE,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,SAA9B,CAAP;;AACF,SAAKjB,kBAAkB,CAACkB,UAAxB;AACE,aAAOL,SAAS,CAACE,MAAV,CAAiBC,IAAI,IAAI,CAACA,IAAI,CAACC,SAA/B,CAAP;;AACF,SAAKjB,kBAAkB,CAACmB,GAAxB;AACA;AACE,aAAON,SAAP;AAPJ;AASD,CAXM","sourcesContent":["import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getRadiosState = store => store.todos;\n\nexport const getRadioList = store =>\n  getRadiosState(store) ? getRadiosState(store).allIds : [];\n\nexport const getRadioById = (store, id) =>\n  getRadiosState(store) ? { ...getRadiosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getRadios = store =>\n  getRadioList(store).map(id => getRadioById(store, id));\n\nexport const getRadiosByVisibilityFilter = (store, visibilityFilter) => {\n  const allRadios = getRadios(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allRadios.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allRadios.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allRadios;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}