{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/twitter/twitter.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass twitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweet: ''\n    };\n    this.displayTweets = this.displayTweets.bind(this);\n  }\n\n  displayTweets() {\n    let tw = '';\n\n    if (this.state.tweet) {\n      for (let i = 0; i < this.state.tweet.tweet.length; i++) {\n        tw += `<li>${this.state.tweet.tweet[i]}</li>`;\n      }\n    }\n\n    return tw; // <div>{this.state.tweet.tweet.forEach(element => {\n    //   <li>{element}</li>\n    // })\n    // }</div>\n  }\n\n  async componentDidMount() {\n    var data = JSON.stringify({\n      \"name\": \"epitech\"\n    });\n    var config = {\n      method: 'post',\n      url: 'http://localhost:8087/tweet',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config).then(res => {\n      this.setState({\n        tweet: { ...this.state.tweet,\n          tweet: res.data.tweet\n        }\n      });\n      console.log(this.state.tweet.tweet); // for(var i= 0; i < this.state.tweet.tweet.length; i++) {\n      //   console.log(this.state.tweet.tweet[i]);\n      // }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.tweet && this.displayTweets()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default twitter;","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/twitter/twitter.js"],"names":["React","Component","compose","TwitterTimelineEmbed","TwitterShareButton","TwitterFollowButton","TwitterHashtagButton","TwitterMentionButton","TwitterTweetEmbed","TwitterMomentShare","TwitterDMButton","TwitterVideoEmbed","TwitterOnAirButton","axios","twitter","constructor","props","state","tweet","displayTweets","bind","tw","i","length","componentDidMount","data","JSON","stringify","config","method","url","headers","then","res","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,mBAAnD,EAAwEC,oBAAxE,EAA8FC,oBAA9F,EAAoHC,iBAApH,EAAuIC,kBAAvI,EAA2JC,eAA3J,EAA4KC,iBAA5K,EAA+LC,kBAA/L,QAAyN,qBAAzN;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAE9Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,GAAG;AAEd,QAAIE,EAAE,GAAG,EAAT;;AAEA,QAAI,KAAKJ,KAAL,CAAWC,KAAf,EAAsB;AACpB,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBA,KAAjB,CAAuBK,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtDD,QAAAA,EAAE,IAAK,OAAM,KAAKJ,KAAL,CAAWC,KAAX,CAAiBA,KAAjB,CAAuBI,CAAvB,CAA0B,OAAvC;AACD;AACF;;AAED,WAAOD,EAAP,CAVc,CAYZ;AACA;AACA;AACA;AAKH;;AAEsB,QAAjBG,iBAAiB,GAAG;AAExB,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,cAAO;AAAR,KAAf,CAAX;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,6BAFI;AAGTC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHA;AAMTN,MAAAA,IAAI,EAAGA;AANE,KAAb;AASAZ,IAAAA,KAAK,CAACe,MAAD,CAAL,CAAcI,IAAd,CAAmBC,GAAG,IAAI;AACxB,WAAKC,QAAL,CAAc;AAAChB,QAAAA,KAAK,EAAE,EAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf;AACpBA,UAAAA,KAAK,EAAEe,GAAG,CAACR,IAAJ,CAASP;AADI;AAAR,OAAd;AAIAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,KAAX,CAAiBA,KAA7B,EALwB,CAMxB;AACA;AACA;AACD,KATD;AAcH;;AAGDmB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,gBAMK,KAAKpB,KAAL,CAAWC,KAAX,IAAoB,KAAKC,aAAL;AANzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;;AA1E2B;;AA8EhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport axios from 'axios';\n\n\nclass twitter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweet: ''\n    }\n\n    this.displayTweets = this.displayTweets.bind(this);\n  };\n\n  displayTweets() {\n\n    let tw = '';\n\n    if (this.state.tweet) {\n      for (let i = 0; i < this.state.tweet.tweet.length; i++) {\n        tw += `<li>${this.state.tweet.tweet[i]}</li>`\n      }\n    }\n\n    return tw;\n    \n      // <div>{this.state.tweet.tweet.forEach(element => {\n      //   <li>{element}</li>\n      // })\n      // }</div>\n     \n    \n\n    \n  }\n\n  async componentDidMount() {\n\n    var data = JSON.stringify({\"name\":\"epitech\"});\n    var config = {\n        method: 'post',\n        url: 'http://localhost:8087/tweet',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : data\n      };\n\n    axios(config).then(res => {\n      this.setState({tweet: {...this.state.tweet,\n        tweet: res.data.tweet,\n      }});\n\n      console.log(this.state.tweet.tweet);\n      // for(var i= 0; i < this.state.tweet.tweet.length; i++) {\n      //   console.log(this.state.tweet.tweet[i]);\n      // }\n    });\n\n  \n\n\n};\n\n\nrender() {\n\n    return (\n        <div>\n          {/* {this.state.tweet.tweet.forEach(element => {\n            <li>{element}</li>\n          })\n          } */}\n            {/* <TwitterTweetEmbed tweetId={'1362078943784886272'} /> */}\n            {this.state.tweet && this.displayTweets()}\n        </div>\n        );\n    }\n    \n}\n\nexport default twitter;"]},"metadata":{},"sourceType":"module"}