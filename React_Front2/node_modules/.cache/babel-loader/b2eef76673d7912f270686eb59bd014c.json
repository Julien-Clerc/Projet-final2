{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js\",\n    _s = $RefreshSig$();\n\nimport './Player.css';\nimport React, { useEffect, useState } from \"react\";\nimport queryString from 'query-string';\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifyPlayer() {\n  _s();\n\n  const [tokenData, setTokenData] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false);\n  const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null);\n  const [playerData, setPlayerData] = useState(null);\n  const [currentPlaylist, setCurresntPlaylist] = useState(null);\n\n  const getPlayerData = async () => {\n    console.log(\"ancienne chanson: :\", playerData);\n    fetch('https://api.spotify.com/v1/me/player', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"nouvelle chanson\", data);\n      setPlayerData(data); //on ajoute les données du morceau dans playerData\n\n      setPlaying(true);\n    });\n  };\n\n  function timer() {\n    this.timer = setInterval(() => this.fetchRadio(), 3000);\n  }\n\n  useEffect(() => {\n    let parsed = queryString.parse(window.location.search);\n    console.log(parsed);\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n      //on set le token\n      setTokenData(spotifytoken);\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlaying(true);\n      });\n      fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }); // getPlayerData();\n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlayerData(data); //on ajoute les données du morceau dans playerData\n      });\n    }\n  }, []);\n\n  const nextSong = async () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/next', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    await getPlayerData();\n  };\n\n  const prevSong = () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/previous', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    getPlayerData();\n  };\n\n  const handlePlayPause = () => {\n    // if (playing && isCurrentlyPlaying) {\n    if (playing) {\n      setPlaying(false);\n      fetch('https://api.spotify.com/v1/me/player/pause', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    } else {\n      setPlaying(true);\n      fetch('https://api.spotify.com/v1/me/player/play', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: !tokenData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: 'http://localhost:8087/spotify/login',\n          children: \"LOGIN TO SPOTIFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 44\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 20\n      }, this) :\n      /*#__PURE__*/\n      //si on veut un player sur toute la largeur, on enlève cette div\n      _jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer__left\",\n          children: playerData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer__left\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"songRow__album\",\n              src: playerData.item.album.images[2].url,\n              alt: playerData.item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__songInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: playerData.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: playerData.item.artists.map(artist => artist.name).join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer__songInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"No song is playing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer__center\",\n          children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {\n            className: \"footer__green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {\n            onClick: prevSong,\n            className: \"footer__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), !playing ? /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n            onClick: handlePlayPause,\n            fontSize: \"large\",\n            className: \"footer__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(PauseCircleOutlineIcon, {\n            onClick: handlePlayPause,\n            fontSize: \"large\",\n            className: \"footer__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(SkipNextIcon, {\n            onClick: nextSong,\n            className: \"footer__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RepeatIcon, {\n            className: \"footer__green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer__right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(PlaylistPlayIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(VolumeDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                \"aria-labelledby\": \"continuous-slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SpotifyPlayer, \"va8ftVliW6naLK4IaBG/zOz/2S4=\");\n\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js"],"names":["React","useEffect","useState","queryString","SkipNextIcon","PlayCircleOutlineIcon","SkipPreviousIcon","VolumeDownIcon","PauseCircleOutlineIcon","PlaylistPlayIcon","ShuffleIcon","RepeatIcon","Grid","Slider","SpotifyPlayer","tokenData","setTokenData","playing","setPlaying","isCurrentlyPlaying","setIsCurrentlyPlaying","songCurrentlyPlayed","setSongCurrentlyPlayed","playerData","setPlayerData","currentPlaylist","setCurresntPlaylist","getPlayerData","console","log","fetch","headers","then","response","json","data","timer","setInterval","fetchRadio","parsed","parse","window","location","search","spotifytoken","access_token","nextSong","method","catch","err","prevSong","handlePlayPause","item","album","images","url","name","artists","map","artist","join"],"mappings":"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","sourcesContent":["import './Player.css'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport queryString from 'query-string'\n\n\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\n\nimport { Grid, Slider } from \"@material-ui/core\";\n\n\n\n\nfunction SpotifyPlayer() {\n\n    const [tokenData, setTokenData] = useState(null)\n    const [playing, setPlaying] = useState(false)\n    const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false)\n\n    const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null)\n    const [playerData, setPlayerData] = useState(null)\n    const [currentPlaylist, setCurresntPlaylist] = useState(null)\n\n    const getPlayerData = async () => {\n      console.log(\"ancienne chanson: :\", playerData)\n\n      \n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+tokenData }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(\"nouvelle chanson\", data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n          setPlaying(true);\n        })\n\n    }\n\n\n    function timer() {\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n\n\n\n    useEffect(() => {\n    let parsed = queryString.parse(window.location.search)\n    console.log(parsed)\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n        //on set le token\n        setTokenData(spotifytoken)\n    \n\n        fetch('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n\n        })\n        \n\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlaying(true);\n        })\n\n\n        fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n        })\n        \n\n        // getPlayerData();\n        fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        })\n    }\n\n    }, [])\n\n    const  nextSong = async () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/next', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n          .then(getPlayerData())\n          .catch(err => console.log(err))\n        await getPlayerData();   \n    }\n\n    const prevSong = () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/previous', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n        .then(getPlayerData())\n        .catch(err => console.log(err))\n      getPlayerData();   \n    }\n\n    const handlePlayPause = () => {\n      // if (playing && isCurrentlyPlaying) {\n      if (playing) {\n        setPlaying(false)\n        fetch('https://api.spotify.com/v1/me/player/pause', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n      } else {\n        setPlaying(true)\n        fetch('https://api.spotify.com/v1/me/player/play', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n\n      }\n    }\n    return (\n        <div className=\"player\" >\n            \n              <div className=\"footer\">\n                {\n                  !tokenData\n                ?  <div className=\"login\"> <a href={'http://localhost:8087/spotify/login'}>LOGIN TO SPOTIFY</a> </div>\n                \n                : //si on veut un player sur toute la largeur, on enlève cette div\n                <div className=\"footer\"> \n\n                  <div className=\"footer__left\"> \n                  {\n                    playerData \n                    ? (\n                    <div className=\"footer__left\">\n                      <img className=\"songRow__album\" src={playerData.item.album.images[2].url} alt={playerData.item.name} />\n\n                        <div className=\"footer__songInfo\">\n                          <h4>{playerData.item.name}</h4>\n                          <p>{playerData.item.artists.map((artist) => artist.name).join(\", \")}</p>\n                        </div>\n                    </div>\n                    ) : (\n                      <div className=\"footer__songInfo\">\n                        <h4>No song is playing</h4>\n                        <p>...</p>\n                      </div>\n                    )}\n                  \n                  </div>\n\n                  <div className=\"footer__center\">\n                    <ShuffleIcon className=\"footer__green\" />\n                    <SkipPreviousIcon onClick={prevSong} className=\"footer__icon\" />\n                    {\n                      !playing \n                      ?\n                      <PlayCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                      />\n                      :\n                      <PauseCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                      />\n\n                    }\n                      \n                    <SkipNextIcon onClick={nextSong} className=\"footer__icon\" />\n                    <RepeatIcon className=\"footer__green\" />\n                  </div>\n                \n                  <div className=\"footer__right\">\n                    <Grid container spacing={2}>\n                      <Grid item>\n                        <PlaylistPlayIcon />\n                      </Grid>\n                      <Grid item>\n                        <VolumeDownIcon />\n                      </Grid>\n                      <Grid item xs>\n                        <Slider aria-labelledby=\"continuous-slider\" />\n                      </Grid>\n                    </Grid>\n                  </div>\n              </div>\n            }\n            </div>\n        </div>\n      )\n\n    }\n\n    export default SpotifyPlayer;"]},"metadata":{},"sourceType":"module"}