{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/three/Disc.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Suspense, Component, useState } from 'react';\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { Howl, Howler } from 'howler'; //credit 3D https://sketchfab.com/ilyafom1\n//credits https://www.youtube.com/watch?v=5ZCtTdwc4GI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Vinyl(props) {\n  _s();\n\n  const groupradio = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF('3DAssets/scene.gltf');\n  const [active, setActive] = useState(false);\n  useFrame(() => {\n    groupradio.current.rotation.y = groupradio.current.rotation.y += 0.01;\n  });\n\n  function play() {\n    //http://icecast.radiofrance.fr/franceculture-midfi.mp3\n    const number = 0;\n    let file;\n\n    if (number == 0) {\n      file = new Howl({\n        src: 'https://intenseradio.live-streams.nl:18000/live',\n        html5: true,\n        // A live stream can only be played through HTML5 Audio.\n        format: ['mp3', 'aac']\n      });\n      number = 1;\n    } else if (number == 1) {\n      file = new Howl({\n        src: 'http://icecast.radiofrance.fr/franceculture-midfi.mp3',\n        html5: true,\n        // A live stream can only be played through HTML5 Audio.\n        format: ['mp3', 'aac']\n      });\n      number = 2;\n    } else {\n      number = 0;\n    }\n\n    file.play();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupradio,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        rotation: [Math.PI / 2, 0, 0],\n        scale: active ? [1.25, 1.25, 1.25] : [1, 1, 1],\n        onPointerOver: e => setActive(!active),\n        onPointerOut: e => setActive(!active),\n        children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials['Material.001'],\n          geometry: nodes.defaultMaterial.geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials['Material.005'],\n          geometry: nodes.defaultMaterial_1.geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials['Material.004'],\n          geometry: nodes.defaultMaterial_2.geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials['Material.006'],\n          geometry: nodes.defaultMaterial_3.geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vinyl, \"H1v91YacsNulVyDPuqhFet9G6vs=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c = Vinyl;\nuseGLTF.preload('3DAssets/scene.gltf');\n\nclass Disc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(Vinyl, {\n        position: [-100, 100, 10],\n        scale: [3, 3, 3],\n        onClick: play()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Disc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vinyl\");","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/three/Disc.jsx"],"names":["React","useRef","Suspense","Component","useState","useGLTF","useFrame","THREE","Howl","Howler","Vinyl","props","groupradio","nodes","materials","active","setActive","current","rotation","y","play","number","file","src","html5","format","Math","PI","e","defaultMaterial","geometry","defaultMaterial_1","defaultMaterial_2","defaultMaterial_3","preload","Disc","constructor","state","render"],"mappings":"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","sourcesContent":["import React, { useRef, Suspense, Component, useState } from 'react'\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from 'react-three-fiber'\nimport * as THREE from 'three'\nimport {Howl, Howler} from 'howler';\n//credit 3D https://sketchfab.com/ilyafom1\n//credits https://www.youtube.com/watch?v=5ZCtTdwc4GI\n\n\nfunction Vinyl(props) {\n  const groupradio = useRef()\n  const { nodes, materials } = useGLTF('3DAssets/scene.gltf')\n  const [active, setActive] = useState(false)\n\n  useFrame(() => {\n    groupradio.current.rotation.y = groupradio.current.rotation.y += 0.01;\n  });\n\n\n  function play() {\n    //http://icecast.radiofrance.fr/franceculture-midfi.mp3\n    const number = 0\n    let file\n    if ( number == 0) {\n      file= new Howl({\n          src: 'https://intenseradio.live-streams.nl:18000/live',\n          html5: true, // A live stream can only be played through HTML5 Audio.\n          format: ['mp3', 'aac']\n      });\n      number = 1\n    }\n    else if ( number == 1) {\n      file= new Howl({\n        src: 'http://icecast.radiofrance.fr/franceculture-midfi.mp3',\n        html5: true, // A live stream can only be played through HTML5 Audio.\n        format: ['mp3', 'aac']\n      });\n      number = 2\n    }\n      else\n    {\n        number = 0\n    }\n    file.play();\n  }      \n    \n  return (\n    <group \n    \n    ref={groupradio} \n    {...props} \n    dispose={null}\n    >\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}\n        scale={active ? [1.25, 1.25, 1.25] : [1, 1, 1]}\n        onPointerOver={(e) => setActive(!active)}\n        onPointerOut={(e) => setActive(!active)}\n         >\n          <mesh material={materials['Material.001']} geometry={nodes.defaultMaterial.geometry} />\n          <mesh material={materials['Material.005']} geometry={nodes.defaultMaterial_1.geometry} />\n          <mesh material={materials['Material.004']} geometry={nodes.defaultMaterial_2.geometry} />\n          <mesh material={materials['Material.006']} geometry={nodes.defaultMaterial_3.geometry} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('3DAssets/scene.gltf')\n\n\nclass Disc extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          number: 0\n        }  \n    }\n    render(){\n        return(\n          <Suspense fallback={null}>\n             <Vinyl position={[-100, 100, 10]} scale={[3, 3, 3]} onClick={play()}/>\n          </Suspense>\n        )\n    }\n}\n\nexport default Disc;"]},"metadata":{},"sourceType":"module"}