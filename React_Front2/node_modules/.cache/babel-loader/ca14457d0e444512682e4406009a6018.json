{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js\",\n    _s = $RefreshSig$();\n\nimport './Player.css';\nimport React, { useEffect, useState } from \"react\";\nimport queryString from 'query-string';\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifyPlayer(props) {\n  _s();\n\n  const currentUser = props.currentUser;\n  console.log(\"CURRENT USER : \" + JSON.stringify(currentUser));\n  const [tokenData, setTokenData] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false);\n  const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null);\n  const [playerData, setPlayerData] = useState(null);\n  const [currentPlaylist, setCurresntPlaylist] = useState(null);\n\n  const getPlayerData = async () => {\n    console.log(\"ancienne chanson: :\", playerData);\n    fetch('https://api.spotify.com/v1/me/player', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"nouvelle chanson\", data);\n      setPlayerData(data); //on ajoute les données du morceau dans playerData\n\n      setPlaying(true);\n    });\n  };\n\n  function timer() {\n    this.timer = setInterval(() => this.fetchRadio(), 3000);\n  }\n\n  useEffect(() => {\n    let parsed = queryString.parse(window.location.search);\n    console.log(parsed);\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n      //on set le token\n      setTokenData(spotifytoken);\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlaying(true);\n      });\n      fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }); // getPlayerData();\n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlayerData(data); //on ajoute les données du morceau dans playerData\n      });\n    }\n  }, []);\n\n  const nextSong = async () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/next', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(await getPlayerData()).catch(err => console.log(err));\n    await getPlayerData();\n  };\n\n  const prevSong = () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/previous', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    getPlayerData();\n  };\n\n  const handlePlayPause = () => {\n    // if (playing && isCurrentlyPlaying) {\n    if (playing) {\n      setPlaying(false);\n      fetch('https://api.spotify.com/v1/me/player/pause', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    } else {\n      setPlaying(true);\n      fetch('https://api.spotify.com/v1/me/player/play', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    }\n  };\n\n  if (currentuser != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: !tokenData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: 'http://localhost:8087/spotify/login',\n            children: \"LOGIN TO SPOTIFY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 22\n        }, this) :\n        /*#__PURE__*/\n        //si on veut un player sur toute la largeur, on enlève cette div\n        _jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer__left\",\n            children: playerData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__left\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"songRow__album\",\n                src: playerData.item.album.images[2].url,\n                alt: playerData.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer__songInfo\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: playerData.item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: playerData.item.artists.map(artist => artist.name).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__songInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"No song is playing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer__center\",\n            children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {\n              className: \"footer__green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {\n              onClick: prevSong,\n              className: \"footer__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 23\n            }, this), !playing ? /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n              onClick: handlePlayPause,\n              fontSize: \"large\",\n              className: \"footer__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(PauseCircleOutlineIcon, {\n              onClick: handlePlayPause,\n              fontSize: \"large\",\n              className: \"footer__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SkipNextIcon, {\n              onClick: nextSong,\n              className: \"footer__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(RepeatIcon, {\n              className: \"footer__green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer__right\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(PlaylistPlayIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(VolumeDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  \"aria-labelledby\": \"continuous-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(SpotifyPlayer, \"va8ftVliW6naLK4IaBG/zOz/2S4=\");\n\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js"],"names":["React","useEffect","useState","queryString","SkipNextIcon","PlayCircleOutlineIcon","SkipPreviousIcon","VolumeDownIcon","PauseCircleOutlineIcon","PlaylistPlayIcon","ShuffleIcon","RepeatIcon","connect","Grid","Slider","SpotifyPlayer","props","currentUser","console","log","JSON","stringify","tokenData","setTokenData","playing","setPlaying","isCurrentlyPlaying","setIsCurrentlyPlaying","songCurrentlyPlayed","setSongCurrentlyPlayed","playerData","setPlayerData","currentPlaylist","setCurresntPlaylist","getPlayerData","fetch","headers","then","response","json","data","timer","setInterval","fetchRadio","parsed","parse","window","location","search","spotifytoken","access_token","nextSong","method","catch","err","prevSong","handlePlayPause","currentuser","item","album","images","url","name","artists","map","artist","join"],"mappings":"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","sourcesContent":["import './Player.css'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport queryString from 'query-string'\n\n\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\n\n\n\nfunction SpotifyPlayer(props) {\n\n    const currentUser = props.currentUser;\n    console.log(\"CURRENT USER : \"+JSON.stringify(currentUser))\n\n    const [tokenData, setTokenData] = useState(null)\n    const [playing, setPlaying] = useState(false)\n    const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false)\n\n    const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null)\n    const [playerData, setPlayerData] = useState(null)\n    const [currentPlaylist, setCurresntPlaylist] = useState(null)\n\n    const getPlayerData = async () => {\n      console.log(\"ancienne chanson: :\", playerData)\n\n      \n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+tokenData }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(\"nouvelle chanson\", data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n          setPlaying(true);\n        })\n\n    }\n\n\n    function timer() {\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n\n\n\n    useEffect(() => {\n    let parsed = queryString.parse(window.location.search)\n    console.log(parsed)\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n        //on set le token\n        setTokenData(spotifytoken)\n    \n\n        fetch('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n\n        })\n        \n\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlaying(true);\n        })\n\n\n        fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n        })\n        \n\n        // getPlayerData();\n        fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        })\n    }\n\n    }, [])\n\n    const  nextSong = async () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/next', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData },\n          method: \"POST\"\n      })\n          .then(await getPlayerData())\n          .catch(err => console.log(err))\n        await getPlayerData();   \n    }\n\n    const prevSong = () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/previous', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n        .then(getPlayerData())\n        .catch(err => console.log(err))\n      getPlayerData();   \n    }\n\n    const handlePlayPause = () => {\n      // if (playing && isCurrentlyPlaying) {\n      if (playing) {\n        setPlaying(false)\n        fetch('https://api.spotify.com/v1/me/player/pause', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n      } else {\n        setPlaying(true)\n        fetch('https://api.spotify.com/v1/me/player/play', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n\n      }\n    }\n\n    if (currentuser != null){\n      return (\n          <div className=\"player\" >\n              \n                <div className=\"footer\">\n                  {\n                    !tokenData\n                  ?  <div className=\"login\"> <a href={'http://localhost:8087/spotify/login'}>LOGIN TO SPOTIFY</a> </div>\n                  \n                  : //si on veut un player sur toute la largeur, on enlève cette div\n                  <div className=\"footer\"> \n\n                    <div className=\"footer__left\"> \n                    {\n                      playerData \n                      ? (\n                      <div className=\"footer__left\">\n                        <img className=\"songRow__album\" src={playerData.item.album.images[2].url} alt={playerData.item.name} />\n\n                          <div className=\"footer__songInfo\">\n                            <h4>{playerData.item.name}</h4>\n                            <p>{playerData.item.artists.map((artist) => artist.name).join(\", \")}</p>\n                          </div>\n                      </div>\n                      ) : (\n                        <div className=\"footer__songInfo\">\n                          <h4>No song is playing</h4>\n                          <p>...</p>\n                        </div>\n                      )}\n                    \n                    </div>\n\n                    <div className=\"footer__center\">\n                      <ShuffleIcon className=\"footer__green\" />\n                      <SkipPreviousIcon onClick={prevSong} className=\"footer__icon\" />\n                      {\n                        !playing \n                        ?\n                        <PlayCircleOutlineIcon\n                          onClick={handlePlayPause}\n                          fontSize=\"large\"\n                          className=\"footer__icon\"\n                        />\n                        :\n                        <PauseCircleOutlineIcon\n                          onClick={handlePlayPause}\n                          fontSize=\"large\"\n                          className=\"footer__icon\"\n                        />\n\n                      }\n                        \n                      <SkipNextIcon onClick={nextSong} className=\"footer__icon\" />\n                      <RepeatIcon className=\"footer__green\" />\n                    </div>\n                  \n                    <div className=\"footer__right\">\n                      <Grid container spacing={2}>\n                        <Grid item>\n                          <PlaylistPlayIcon />\n                        </Grid>\n                        <Grid item>\n                          <VolumeDownIcon />\n                        </Grid>\n                        <Grid item xs>\n                          <Slider aria-labelledby=\"continuous-slider\" />\n                        </Grid>\n                      </Grid>\n                    </div>\n                </div>\n              }\n              </div>\n          </div>\n        )\n      }\n      else\n      {\n        return(\n          <div></div>\n        )\n      }\n    }\n\n    export default SpotifyPlayer;"]},"metadata":{},"sourceType":"module"}