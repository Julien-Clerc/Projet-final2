{"ast":null,"code":"var _jsxFileName = \"/home/julien/Rendu/ETP/React_Front2/src/components/spotify/Player.js\",\n    _s = $RefreshSig$();\n\nimport './Player.css';\nimport React, { useEffect, useState } from \"react\";\nimport queryString from 'query-string';\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifyPlayer(props) {\n  _s();\n\n  var display = props.displaySpotify;\n  const currentUser = props.currentUser;\n  console.log(\"CURRENT USER PLAYER SPOTIFY : \" + JSON.stringify(currentUser));\n  const [tokenData, setTokenData] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [inPlaylist, setInPlaylist] = useState(false);\n  const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null);\n  const [playerData, setPlayerData] = useState(null);\n  const [currentPlaylist, setCurresntPlaylist] = useState(null);\n  const [allPlaylists, setAllPlaylists] = useState(null);\n\n  const getPlayerData = async () => {\n    console.log(\"ancienne chanson: :\", playerData);\n    fetch('https://api.spotify.com/v1/me/player', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"nouvelle chanson\", data);\n      setPlayerData(data); //on ajoute les données du morceau dans playerData\n\n      setPlaying(true);\n    }).catch(err => {\n      setPlayerData(null);\n    });\n  };\n\n  function timer() {\n    this.timer = setInterval(() => this.fetchRadio(), 3000);\n  }\n\n  useEffect(() => {\n    let parsed = queryString.parse(window.location.search);\n    console.log(parsed);\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n      //on set le token\n      setTokenData(spotifytoken);\n      const timer = setInterval(() => {\n        fetch('https://api.spotify.com/v1/me', {\n          headers: {\n            'Authorization': 'Bearer ' + spotifytoken\n          }\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n        });\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n          headers: {\n            'Authorization': 'Bearer ' + spotifytoken\n          }\n        }).then(response => response.json()).then(data => {\n          if (data) {\n            console.log(data);\n            setPlaying(true);\n            setInPlaylist(true);\n          } else {\n            setInPlaylist(false);\n            setPlaying(false);\n          }\n        }).catch(err => {\n          setPlaying(false);\n        });\n        fetch('https://api.spotify.com/v1/me/playlists', {\n          headers: {\n            'Authorization': 'Bearer ' + spotifytoken\n          }\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n\n          if (data.items.length > 0) {\n            setAllPlaylists(data);\n          }\n        }); // getPlayerData();\n\n        fetch('https://api.spotify.com/v1/me/player', {\n          headers: {\n            'Authorization': 'Bearer ' + spotifytoken\n          }\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        }).catch(err => {\n          setPlayerData(null);\n        });\n      }, 3000);\n    }\n  }, []);\n\n  const nextSong = async () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/next', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    getPlayerData();\n  };\n\n  const prevSong = () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/previous', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    getPlayerData();\n  };\n\n  const handlePlayPause = () => {\n    // if (inPlaylist) {\n    // if (playing && isCurrentlyPlaying) {\n    if (playing) {\n      setPlaying(false);\n      fetch('https://api.spotify.com/v1/me/player/pause', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    } else {\n      setPlaying(true);\n      fetch('https://api.spotify.com/v1/me/player/play', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    } // }\n    //   else {\n    //     if(allPlaylists) {\n    //       console.log(\"on lance une playlist random de l'user\")\n    //       console.log(allPlaylists.items[0])\n    //         fetch('https://api.spotify.com/v1/me/player/play', \n    //     {\n    //         headers: {'Authorization': 'Bearer '+tokenData }\n    //     ,method: \"PUT\",\n    //     data: JSON.stringify({'context_uri': 'spotify:playlist:'+allPlaylists.items[0].id})\n    //     })\n    //         .then(response => response.json())\n    //         .then( data => console.log(data))\n    //         .catch(err => console.log(err))\n    //       }\n    //   }\n\n  };\n\n  console.log(\"CURRENT USER BEFORE IF \" + currentUser);\n\n  if (currentUser != undefined) {\n    if (display != false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-spotify-controls\",\n          onClick: props.showSpotify,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          style: {\n            display: \"flex\"\n          },\n          children: !tokenData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: 'http://localhost:8087/spotify/login',\n              children: \"LOGIN TO SPOTIFY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 48\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 24\n          }, this) :\n          /*#__PURE__*/\n          //si on veut un player sur toute la largeur, on enlève cette div\n          _jsxDEV(\"div\", {\n            className: \"footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__left\",\n              children: playerData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"songRow__album\",\n                  src: playerData.item.album.images[2].url,\n                  alt: playerData.item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer__songInfo\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: playerData.item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: playerData.item.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer__songInfo\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"No song is playing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__center\",\n              children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {\n                className: \"footer__green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {\n                onClick: prevSong,\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this), !playing ? /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                onClick: handlePlayPause,\n                fontSize: \"large\",\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(PauseCircleOutlineIcon, {\n                onClick: handlePlayPause,\n                fontSize: \"large\",\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(SkipNextIcon, {\n                onClick: nextSong,\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(RepeatIcon, {\n                className: \"footer__green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__right\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(PlaylistPlayIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(VolumeDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Slider, {\n                    \"aria-labelledby\": \"continuous-slider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-spotify-controls\",\n          onClick: props.showSpotify,\n          children: \"Show Spotify Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(SpotifyPlayer, \"XOEbzs/SXkLq/vADBuR7nHsHlDg=\");\n\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"sources":["/home/julien/Rendu/ETP/React_Front2/src/components/spotify/Player.js"],"names":["React","useEffect","useState","queryString","SkipNextIcon","PlayCircleOutlineIcon","SkipPreviousIcon","VolumeDownIcon","PauseCircleOutlineIcon","PlaylistPlayIcon","ShuffleIcon","RepeatIcon","connect","Grid","Slider","SpotifyPlayer","props","display","displaySpotify","currentUser","console","log","JSON","stringify","tokenData","setTokenData","playing","setPlaying","inPlaylist","setInPlaylist","songCurrentlyPlayed","setSongCurrentlyPlayed","playerData","setPlayerData","currentPlaylist","setCurresntPlaylist","allPlaylists","setAllPlaylists","getPlayerData","fetch","headers","then","response","json","data","catch","err","timer","setInterval","fetchRadio","parsed","parse","window","location","search","spotifytoken","access_token","items","length","nextSong","method","prevSong","handlePlayPause","undefined","showSpotify","item","album","images","url","name","artists","map","artist","join"],"mappings":"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","sourcesContent":["import './Player.css'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport queryString from 'query-string'\n\n\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\n\n\n\nfunction SpotifyPlayer(props) {\n\n    var display = props.displaySpotify\n    const currentUser = props.currentUser;\n    console.log(\"CURRENT USER PLAYER SPOTIFY : \"+JSON.stringify(currentUser))\n\n    const [tokenData, setTokenData] = useState(null)\n    const [playing, setPlaying] = useState(false)\n    const [inPlaylist, setInPlaylist] = useState(false)\n\n    const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null)\n    const [playerData, setPlayerData] = useState(null)\n    const [currentPlaylist, setCurresntPlaylist] = useState(null)\n    const [allPlaylists, setAllPlaylists] = useState(null)\n\n\n    const getPlayerData = async () => {\n      console.log(\"ancienne chanson: :\", playerData)\n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+tokenData }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(\"nouvelle chanson\", data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n          setPlaying(true);\n        }).catch(err => {\n          setPlayerData(null)\n        })\n\n    }\n\n\n    function timer() {\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n\n\n\n    useEffect(() => {\n    let parsed = queryString.parse(window.location.search)\n    console.log(parsed)\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n        //on set le token\n        setTokenData(spotifytoken)\n    \n      const timer = setInterval(() => {\n        fetch('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n\n        })\n        \n\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          if (data) {\n            console.log(data);\n            setPlaying(true);\n            setInPlaylist(true)\n\n          }\n          else {\n            setInPlaylist(false)\n            setPlaying(false);\n          }\n        }).catch(err => {\n          setPlaying(false);\n        })\n\n\n        fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          if (data.items.length > 0){\n            setAllPlaylists(data);\n          }\n        })\n        \n\n        // getPlayerData();\n        fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        }).catch(err => {\n          setPlayerData(null)\n        })\n\n\n      }, 3000);\n    }\n\n\n    \n\n    }, [])\n\n    const  nextSong = async () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/next', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData },\n          method: \"POST\"\n      })\n          .then(getPlayerData())\n          .catch(err => console.log(err))\n        getPlayerData();   \n    }\n\n    const prevSong = () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/previous', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n        .then(getPlayerData())\n        .catch(err => console.log(err))\n      getPlayerData();   \n    }\n\n    const handlePlayPause = () => {\n\n      // if (inPlaylist) {\n\n        // if (playing && isCurrentlyPlaying) {\n        if (playing) {\n          setPlaying(false)\n          fetch('https://api.spotify.com/v1/me/player/pause', \n        \n        {\n            headers: {'Authorization': 'Bearer '+tokenData }\n        ,method: \"PUT\"\n        })\n            .then(response => response.json())\n            .then( data => console.log(data))\n            .catch(err => console.log(err))\n        } else {\n          setPlaying(true)\n          fetch('https://api.spotify.com/v1/me/player/play', \n        \n        {\n            headers: {'Authorization': 'Bearer '+tokenData }\n        ,method: \"PUT\"\n        })\n            .then(response => response.json())\n            .then( data => console.log(data))\n            .catch(err => console.log(err))\n\n        }\n      // }\n      //   else {\n      //     if(allPlaylists) {\n      //       console.log(\"on lance une playlist random de l'user\")\n      //       console.log(allPlaylists.items[0])\n      //         fetch('https://api.spotify.com/v1/me/player/play', \n          \n      //     {\n      //         headers: {'Authorization': 'Bearer '+tokenData }\n      //     ,method: \"PUT\",\n      //     data: JSON.stringify({'context_uri': 'spotify:playlist:'+allPlaylists.items[0].id})\n      //     })\n      //         .then(response => response.json())\n      //         .then( data => console.log(data))\n      //         .catch(err => console.log(err))\n      //       }\n      //   }\n      }\n    \n\n    console.log(\"CURRENT USER BEFORE IF \"+ currentUser)\n    if (currentUser != undefined){\n      if (display != false){\n        return (\n            <div className=\"player\" >\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Close</button>\n                  <div className=\"footer\" style={{display: \"flex\"}}>\n                    {\n                      !tokenData\n                    ?  <div className=\"login\"> <a href={'http://localhost:8087/spotify/login'}>LOGIN TO SPOTIFY</a> </div>\n                    \n                    : //si on veut un player sur toute la largeur, on enlève cette div\n                    <div className=\"footer\"> \n\n                      <div className=\"footer__left\"> \n                      {\n                        playerData \n                        ? (\n                        <div className=\"footer__left\">\n                          <img className=\"songRow__album\" src={playerData.item.album.images[2].url} alt={playerData.item.name} />\n\n                            <div className=\"footer__songInfo\">\n                              <h4>{playerData.item.name}</h4>\n                              <p>{playerData.item.artists.map((artist) => artist.name).join(\", \")}</p>\n                            </div>\n                        </div>\n                        ) : (\n                          <div className=\"footer__songInfo\">\n                            <h4>No song is playing</h4>\n                            <p>...</p>\n                          </div>\n                        )}\n                      \n                      </div>\n\n                      <div className=\"footer__center\">\n                        <ShuffleIcon className=\"footer__green\" />\n                        <SkipPreviousIcon onClick={prevSong} className=\"footer__icon\" />\n                        {\n                          !playing \n                          ?\n                          <PlayCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n                          :\n                          <PauseCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n\n                        }\n                          \n                        <SkipNextIcon onClick={nextSong} className=\"footer__icon\" />\n                        <RepeatIcon className=\"footer__green\" />\n                      </div>\n                    \n                      <div className=\"footer__right\">\n                        <Grid container spacing={2}>\n                          <Grid item>\n                            <PlaylistPlayIcon />\n                          </Grid>\n                          <Grid item>\n                            <VolumeDownIcon />\n                          </Grid>\n                          <Grid item xs>\n                            <Slider aria-labelledby=\"continuous-slider\" />\n                          </Grid>\n                        </Grid>\n                      </div>\n                  </div>\n                }\n                </div>\n            </div>\n          )\n          }\n          else\n          {\n            return(\n              <div>\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Show Spotify Controls</button>\n              </div>\n            )\n          }\n      }\n      else\n      {\n        return(\n          <div>\n            \n          </div>\n        )\n      }\n    }\n\n    export default SpotifyPlayer;"]},"metadata":{},"sourceType":"module"}