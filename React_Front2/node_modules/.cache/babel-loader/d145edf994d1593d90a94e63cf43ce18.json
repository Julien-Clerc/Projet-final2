{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js\",\n    _s = $RefreshSig$();\n\nimport './Player.css';\nimport React, { useEffect, useState } from \"react\";\nimport queryString from 'query-string';\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifyPlayer(props) {\n  _s();\n\n  var display = props.displaySpotify;\n  const currentUser = props.currentUser;\n  console.log(\"CURRENT USER PLAYER SPOTIFY : \" + JSON.stringify(currentUser));\n  const [tokenData, setTokenData] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false);\n  const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null);\n  const [playerData, setPlayerData] = useState(null);\n  const [currentPlaylist, setCurresntPlaylist] = useState(null);\n\n  const getPlayerData = async () => {\n    console.log(\"ancienne chanson: :\", playerData);\n    fetch('https://api.spotify.com/v1/me/player', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"nouvelle chanson\", data);\n      setPlayerData(data); //on ajoute les données du morceau dans playerData\n\n      setPlaying(true);\n    });\n  };\n\n  function timer() {\n    this.timer = setInterval(() => this.fetchRadio(), 3000);\n  }\n\n  useEffect(() => {\n    let parsed = queryString.parse(window.location.search);\n    console.log(parsed);\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n      //on set le token\n      setTokenData(spotifytoken);\n      fetch('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlaying(true);\n      });\n      fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }); // getPlayerData();\n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {\n          'Authorization': 'Bearer ' + spotifytoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setPlayerData(data); //on ajoute les données du morceau dans playerData\n      });\n    }\n  }, []);\n\n  const nextSong = async () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/next', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(await getPlayerData()).catch(err => console.log(err));\n    await getPlayerData();\n  };\n\n  const prevSong = () => {\n    console.log(tokenData);\n    fetch('https://api.spotify.com/v1/me/player/previous', {\n      headers: {\n        'Authorization': 'Bearer ' + tokenData\n      },\n      method: \"POST\"\n    }).then(getPlayerData()).catch(err => console.log(err));\n    getPlayerData();\n  };\n\n  const handlePlayPause = () => {\n    // if (playing && isCurrentlyPlaying) {\n    if (playing) {\n      setPlaying(false);\n      fetch('https://api.spotify.com/v1/me/player/pause', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    } else {\n      setPlaying(true);\n      fetch('https://api.spotify.com/v1/me/player/play', {\n        headers: {\n          'Authorization': 'Bearer ' + tokenData\n        },\n        method: \"PUT\"\n      }).then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    }\n  };\n\n  console.log(\"CURRENT USER BEFORE IF \" + currentUser);\n\n  if (currentUser != undefined) {\n    if (display != false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-spotify-controls\",\n          onClick: props.showSpotify,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          style: {\n            display: \"flex\"\n          },\n          children: !tokenData ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: 'http://localhost:8087/spotify/login',\n              children: \"LOGIN TO SPOTIFY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 48\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 24\n          }, this) :\n          /*#__PURE__*/\n          //si on veut un player sur toute la largeur, on enlève cette div\n          _jsxDEV(\"div\", {\n            className: \"footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__left\",\n              children: playerData ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer__left\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"songRow__album\",\n                  src: playerData.item.album.images[2].url,\n                  alt: playerData.item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer__songInfo\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: playerData.item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: playerData.item.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer__songInfo\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"No song is playing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__center\",\n              children: [/*#__PURE__*/_jsxDEV(ShuffleIcon, {\n                className: \"footer__green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(SkipPreviousIcon, {\n                onClick: prevSong,\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this), !playing ? /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                onClick: handlePlayPause,\n                fontSize: \"large\",\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(PauseCircleOutlineIcon, {\n                onClick: handlePlayPause,\n                fontSize: \"large\",\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(SkipNextIcon, {\n                onClick: nextSong,\n                className: \"footer__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(RepeatIcon, {\n                className: \"footer__green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer__right\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(PlaylistPlayIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(VolumeDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Slider, {\n                    \"aria-labelledby\": \"continuous-slider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-spotify-controls\",\n          onClick: props.showSpotify,\n          children: \"Show Spotify Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(SpotifyPlayer, \"va8ftVliW6naLK4IaBG/zOz/2S4=\");\n\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/spotify/Player.js"],"names":["React","useEffect","useState","queryString","SkipNextIcon","PlayCircleOutlineIcon","SkipPreviousIcon","VolumeDownIcon","PauseCircleOutlineIcon","PlaylistPlayIcon","ShuffleIcon","RepeatIcon","connect","Grid","Slider","SpotifyPlayer","props","display","displaySpotify","currentUser","console","log","JSON","stringify","tokenData","setTokenData","playing","setPlaying","isCurrentlyPlaying","setIsCurrentlyPlaying","songCurrentlyPlayed","setSongCurrentlyPlayed","playerData","setPlayerData","currentPlaylist","setCurresntPlaylist","getPlayerData","fetch","headers","then","response","json","data","timer","setInterval","fetchRadio","parsed","parse","window","location","search","spotifytoken","access_token","nextSong","method","catch","err","prevSong","handlePlayPause","undefined","showSpotify","item","album","images","url","name","artists","map","artist","join"],"mappings":"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","sourcesContent":["import './Player.css'\n\nimport React, { useEffect, useState } from \"react\";\n\nimport queryString from 'query-string'\n\n\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { connect } from \"react-redux\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\n\n\n\nfunction SpotifyPlayer(props) {\n\n    var display = props.displaySpotify\n    const currentUser = props.currentUser;\n    console.log(\"CURRENT USER PLAYER SPOTIFY : \"+JSON.stringify(currentUser))\n\n    const [tokenData, setTokenData] = useState(null)\n    const [playing, setPlaying] = useState(false)\n    const [isCurrentlyPlaying, setIsCurrentlyPlaying] = useState(false)\n\n    const [songCurrentlyPlayed, setSongCurrentlyPlayed] = useState(null)\n    const [playerData, setPlayerData] = useState(null)\n    const [currentPlaylist, setCurresntPlaylist] = useState(null)\n\n    const getPlayerData = async () => {\n      console.log(\"ancienne chanson: :\", playerData)\n\n      \n\n      fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+tokenData }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(\"nouvelle chanson\", data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n          setPlaying(true);\n        })\n\n    }\n\n\n    function timer() {\n      this.timer = setInterval(() => this.fetchRadio(), 3000);\n    }\n\n\n\n    useEffect(() => {\n    let parsed = queryString.parse(window.location.search)\n    console.log(parsed)\n    const spotifytoken = parsed.access_token;\n\n    if (spotifytoken) {\n        //on set le token\n        setTokenData(spotifytoken)\n    \n\n        fetch('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n\n        })\n        \n\n        fetch('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlaying(true);\n        })\n\n\n        fetch('https://api.spotify.com/v1/me/playlists', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n        })\n        \n\n        // getPlayerData();\n        fetch('https://api.spotify.com/v1/me/player', {\n        headers: {'Authorization': 'Bearer '+spotifytoken }\n        })\n        .then(response => response.json())\n        .then( data => {\n          console.log(data);\n          setPlayerData(data); //on ajoute les données du morceau dans playerData\n        })\n    }\n\n    }, [])\n\n    const  nextSong = async () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/next', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData },\n          method: \"POST\"\n      })\n          .then(await getPlayerData())\n          .catch(err => console.log(err))\n        await getPlayerData();   \n    }\n\n    const prevSong = () => {\n      console.log(tokenData)\n      fetch('https://api.spotify.com/v1/me/player/previous', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"POST\"\n      })\n        .then(getPlayerData())\n        .catch(err => console.log(err))\n      getPlayerData();   \n    }\n\n    const handlePlayPause = () => {\n      // if (playing && isCurrentlyPlaying) {\n      if (playing) {\n        setPlaying(false)\n        fetch('https://api.spotify.com/v1/me/player/pause', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n      } else {\n        setPlaying(true)\n        fetch('https://api.spotify.com/v1/me/player/play', \n      \n      {\n          headers: {'Authorization': 'Bearer '+tokenData }\n      ,method: \"PUT\"\n      })\n          .then(response => response.json())\n          .then( data => console.log(data))\n          .catch(err => console.log(err))\n\n      }\n    }\n\n    console.log(\"CURRENT USER BEFORE IF \"+ currentUser)\n    if (currentUser != undefined){\n      if (display != false){\n        return (\n            <div className=\"player\" >\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Close</button>\n                  <div className=\"footer\" style={{display: \"flex\"}}>\n                    {\n                      !tokenData\n                    ?  <div className=\"login\"> <a href={'http://localhost:8087/spotify/login'}>LOGIN TO SPOTIFY</a> </div>\n                    \n                    : //si on veut un player sur toute la largeur, on enlève cette div\n                    <div className=\"footer\"> \n\n                      <div className=\"footer__left\"> \n                      {\n                        playerData \n                        ? (\n                        <div className=\"footer__left\">\n                          <img className=\"songRow__album\" src={playerData.item.album.images[2].url} alt={playerData.item.name} />\n\n                            <div className=\"footer__songInfo\">\n                              <h4>{playerData.item.name}</h4>\n                              <p>{playerData.item.artists.map((artist) => artist.name).join(\", \")}</p>\n                            </div>\n                        </div>\n                        ) : (\n                          <div className=\"footer__songInfo\">\n                            <h4>No song is playing</h4>\n                            <p>...</p>\n                          </div>\n                        )}\n                      \n                      </div>\n\n                      <div className=\"footer__center\">\n                        <ShuffleIcon className=\"footer__green\" />\n                        <SkipPreviousIcon onClick={prevSong} className=\"footer__icon\" />\n                        {\n                          !playing \n                          ?\n                          <PlayCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n                          :\n                          <PauseCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                          />\n\n                        }\n                          \n                        <SkipNextIcon onClick={nextSong} className=\"footer__icon\" />\n                        <RepeatIcon className=\"footer__green\" />\n                      </div>\n                    \n                      <div className=\"footer__right\">\n                        <Grid container spacing={2}>\n                          <Grid item>\n                            <PlaylistPlayIcon />\n                          </Grid>\n                          <Grid item>\n                            <VolumeDownIcon />\n                          </Grid>\n                          <Grid item xs>\n                            <Slider aria-labelledby=\"continuous-slider\" />\n                          </Grid>\n                        </Grid>\n                      </div>\n                  </div>\n                }\n                </div>\n            </div>\n          )\n          }\n          else\n          {\n            return(\n              <div>\n                <button className=\"show-spotify-controls\" onClick={props.showSpotify}>Show Spotify Controls</button>\n              </div>\n            )\n          }\n      }\n      else\n      {\n        return(\n          <div>\n            \n          </div>\n        )\n      }\n    }\n\n    export default SpotifyPlayer;"]},"metadata":{},"sourceType":"module"}