{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/frontwidgets2/projet/React_Front2/src/components/profile.component.js\";\nimport './Profile.css';\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { store } from 'react-notifications-component';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar: '',\n      username: '',\n      email: '',\n      password: '',\n      cf_password: '',\n      loggedUser: {\n        username: '',\n        email: '',\n        avatar: ''\n      },\n      test: ''\n    };\n    this.changeAvatar = this.changeAvatar.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeCFPassword = this.onChangeCFPassword.bind(this);\n    this.handleUpdateProfile = this.handleUpdateProfile.bind(this);\n  }\n\n  async componentWillMount() {\n    const usr = await axios.get('http://localhost:8087/user/' + this.props.user.id);\n    console.log(\"nouveau user\", usr);\n    this.setState({\n      loggedUser: { ...this.state.loggedUser,\n        username: usr.data.username,\n        email: usr.data.email,\n        avatar: usr.data.avatar\n      }\n    });\n    console.log(this.state.loggedUser);\n    this.setState({\n      username: this.state.loggedUser.username,\n      email: this.state.loggedUser.email,\n      avatar: this.state.loggedUser.avatar\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeCFPassword(e) {\n    this.setState({\n      cf_password: e.target.value\n    });\n  }\n\n  async getAvatar(image) {\n    const img = await this.imageUpload(image);\n    return img;\n  }\n\n  async handleUpdateProfile(e) {\n    e.preventDefault();\n    const {\n      username,\n      email,\n      password,\n      cf_password,\n      avatar\n    } = this.state;\n    console.log(avatar);\n    let media;\n\n    if (avatar !== this.state.loggedUser.avatar) {\n      media = await this.getAvatar([avatar]);\n      console.log(\"media avant upload:\", media[0].url); // const newAvatar = media[0].url;\n\n      this.updateAvatar(media[0].url);\n    }\n\n    if (password) {\n      // console.log(\"mdp\", password)\n      this.updatePassword(password, cf_password);\n    }\n\n    if (username !== this.state.loggedUser.username || email !== this.state.loggedUser.email) {\n      // console.log(\"nom\", username)\n      this.updateProfile(username, email);\n    }\n\n    store.addNotification({\n      title: \"Update success :\",\n      message: \"Your profile has been updated !\",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 3000,\n        onScreen: true\n      }\n    });\n  }\n\n  updateAvatar(avatar) {\n    const data = {};\n    data['avatar'] = avatar;\n    console.log(data);\n    fetch('http://localhost:8087/user/' + this.props.user.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      console.log(data); // this.getCurrentUser();\n    }).catch(err => console.log(err));\n  }\n\n  updatePassword(password, cf_password) {\n    if (password.length < 6 || password.length > 40) {\n      console.log(\"err: password must be between 6 and 40\");\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"Your password must be between 6 and 40 characters.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n      });\n    }\n\n    if (password !== cf_password) {\n      console.log(\"err: password must match confirmation\");\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"The confirmation and the password must match.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n      });\n    }\n\n    if (!(password.length < 6 || password.length > 40) && !(password !== cf_password)) {\n      fetch('http://localhost:8087/user/' + this.props.user.id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: password\n        })\n      }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n    }\n  }\n\n  async updateProfile(username, email) {\n    const data = {};\n    if (username !== this.state.loggedUser.username) data['username'] = username;\n    if (email !== this.state.loggedUser.email) data['email'] = email;\n    console.log(data);\n    fetch('http://localhost:8087/user/' + this.props.user.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      console.log(data); // this.getCurrentUser();\n    }).catch(err => console.log(err));\n  }\n\n  async getCurrentUser() {\n    const usr = await axios.get('http://localhost:8087/user/' + this.props.user.id);\n    console.log(\"nouveau user\", usr);\n    this.setState({\n      loggedUser: { ...this.state.loggedUser,\n        username: usr.data.username,\n        email: usr.data.email,\n        avatar: usr.data.avatar\n      }\n    }); // return {username: usr.data.username, email: usr.data.email}\n  }\n\n  changeAvatar(e) {\n    // console.log(e.target.files)\n    const file = e.target.files[0];\n    console.log(file);\n    this.setState({\n      avatar: file\n    });\n  }\n\n  async imageUpload(images) {\n    const CLOUD_UPDATE_PRESET = \"nextjs_rotten_tomatoes\";\n    const CLOUD_NAME = \"detolcw1y\";\n    const CLOUD_API = \"https://api.cloudinary.com/v1_1/detolcw1y/image/upload\";\n    let imgArr = [];\n\n    for (const item of images) {\n      console.log(item);\n      const formData = new FormData();\n      formData.append(\"file\", item);\n      formData.append(\"upload_preset\", CLOUD_UPDATE_PRESET);\n      formData.append(\"cloud_name\", CLOUD_NAME);\n      const res = await fetch(CLOUD_API, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      console.log(\"response of upload :\", data);\n      imgArr.push({\n        public_id: data.public_id,\n        url: data.secure_url\n      });\n      return imgArr;\n    }\n  }\n\n  render() {\n    const {\n      user: currentUser\n    } = this.props;\n\n    if (!currentUser) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container profile_page\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row text-secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center text-uppercase\",\n            children: \"'User Profile'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.loggedUser.avatar === this.state.avatar ? this.state.loggedUser.avatar : 'https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png',\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"file_up\",\n                accept: \"image/*\",\n                onChange: this.changeAvatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: this.state.username,\n              className: \"form-control\",\n              placeholder: \"Your username\",\n              onChange: this.onChangeUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: this.state.email,\n              className: \"form-control\",\n              onChange: this.onChangeEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: this.password,\n              className: \"form-control\",\n              placeholder: \"Your new password\",\n              onChange: this.onChangePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cf_password\",\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"cf_password\",\n              value: this.cf_password,\n              className: \"form-control\",\n              placeholder: \"Confirm new password\",\n              onChange: this.onChangeCFPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: this.handleUpdateProfile,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Services available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }, this), this.state.loggedUser.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 21\n          }, this), this.state.loggedUser.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    user\n  } = state.auth;\n  return {\n    user\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/vincent/frontwidgets2/projet/React_Front2/src/components/profile.component.js"],"names":["React","Component","useState","useEffect","Redirect","connect","store","axios","Profile","constructor","props","state","avatar","username","email","password","cf_password","loggedUser","test","changeAvatar","bind","onChangeUsername","onChangeEmail","onChangePassword","onChangeCFPassword","handleUpdateProfile","componentWillMount","usr","get","user","id","console","log","setState","data","e","target","value","getAvatar","image","img","imageUpload","preventDefault","media","url","updateAvatar","updatePassword","updateProfile","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","length","getCurrentUser","file","files","images","CLOUD_UPDATE_PRESET","CLOUD_NAME","CLOUD_API","imgArr","item","formData","FormData","append","push","public_id","secure_url","render","currentUser","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import './Profile.css'\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { store } from 'react-notifications-component';\n\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar: '',\n      username: '',\n      email: '',\n      password: '',\n      cf_password: '',\n      loggedUser: {username: '', email: '', avatar: ''},\n      test: ''\n    };\n\n    this.changeAvatar = this.changeAvatar.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeCFPassword = this.onChangeCFPassword.bind(this);\n    this.handleUpdateProfile = this.handleUpdateProfile.bind(this);\n  }\n\n  async componentWillMount() {\n    const usr = await axios.get('http://localhost:8087/user/'+this.props.user.id)\n    console.log(\"nouveau user\",usr)\n    this.setState({loggedUser: {...this.state.loggedUser,\n      username: usr.data.username,\n      email: usr.data.email,\n      avatar: usr.data.avatar\n    }})\n    console.log(this.state.loggedUser)\n    this.setState({\n      username: this.state.loggedUser.username,\n      email: this.state.loggedUser.email,\n      avatar: this.state.loggedUser.avatar\n    })\n  };\n\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  onChangeCFPassword(e) {\n    this.setState({\n      cf_password: e.target.value,\n    });\n  };\n\n  async getAvatar(image) {\n    const img = await this.imageUpload(image);\n    return img;\n  };\n\n  async handleUpdateProfile(e) {\n\n    e.preventDefault();\n\n    const { username, email, password, cf_password, avatar } = this.state\n    console.log(avatar);\n    let media;\n    if(avatar !== this.state.loggedUser.avatar) {\n        media = await this.getAvatar([avatar])\n        console.log(\"media avant upload:\", media[0].url)\n        // const newAvatar = media[0].url;\n        this.updateAvatar(media[0].url);\n    }\n\n    if (password) {\n      // console.log(\"mdp\", password)\n      this.updatePassword(password, cf_password);\n    }\n\n    if (username !== this.state.loggedUser.username || email !== this.state.loggedUser.email) {\n      // console.log(\"nom\", username)\n      \n        this.updateProfile(username, email);\n      }\n\n      store.addNotification({\n        title: \"Update success :\",\n        message: \"Your profile has been updated !\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n      })\n    }\n\n  updateAvatar(avatar) {\n    const data = {}\n\n    data['avatar'] = avatar;\n    console.log(data)\n\n    fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      // this.getCurrentUser();\n    })\n    .catch(err => console.log(err))\n  }\n\n  updatePassword(password, cf_password) {\n    if (password.length < 6 || password.length > 40) {\n      console.log(\"err: password must be between 6 and 40\")\n\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"Your password must be between 6 and 40 characters.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n\n      })\n    }\n    if (password !== cf_password) {\n      console.log(\"err: password must match confirmation\")\n      store.addNotification({\n        title: \"Password error :\",\n        message: \"The confirmation and the password must match.\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 3000,\n          onScreen: true\n        }\n\n      })\n    }\n\n    if (!(password.length < 6 || password.length > 40) && !(password !== cf_password )) {\n\n      fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({password: password})\n    })\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(err => console.log(err))\n    }\n\n  }\n\n  async updateProfile(username, email) {\n\n    const data = {}\n\n    if (username !== this.state.loggedUser.username) data['username'] = username\n    if (email !== this.state.loggedUser.email) data['email'] = email\n\n    console.log(data);\n\n    fetch('http://localhost:8087/user/'+this.props.user.id, {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      // this.getCurrentUser();\n    })\n    .catch(err => console.log(err))\n\n  }\n\n  async getCurrentUser() {\n    const usr = await axios.get('http://localhost:8087/user/'+this.props.user.id)\n    console.log(\"nouveau user\",usr)\n\n    this.setState({loggedUser: {...this.state.loggedUser,\n      username: usr.data.username,\n      email: usr.data.email,\n      avatar: usr.data.avatar\n    }})\n    // return {username: usr.data.username, email: usr.data.email}\n  }\n\n  changeAvatar(e) {\n    // console.log(e.target.files)\n    const file = e.target.files[0];\n    console.log(file);\n\n    this.setState({\n      avatar: file\n    });\n  }\n  \n  async imageUpload(images) {\n    const CLOUD_UPDATE_PRESET= \"nextjs_rotten_tomatoes\"\n    const CLOUD_NAME = \"detolcw1y\"\n    const CLOUD_API = \"https://api.cloudinary.com/v1_1/detolcw1y/image/upload\"\n\n    let imgArr = []\n\n    for(const item of images) {\n        console.log(item)\n        const formData = new FormData();\n        formData.append(\"file\",item)\n        formData.append(\"upload_preset\",CLOUD_UPDATE_PRESET)\n        formData.append(\"cloud_name\",CLOUD_NAME)\n\n\n        const res = await fetch(CLOUD_API, {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        console.log(\"response of upload :\",data)\n        imgArr.push({public_id: data.public_id, url: data.secure_url})\n\n        return imgArr;\n    }\n  }\n  \n\n  render() {\n\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    \n\n    return (\n      <div className=\"container profile_page\">\n        {/* <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken} ...{\" \"}\n          {currentUser.accessToken}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email} <br />\n          <strong>Service:</strong> {currentUser.service}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul> */}\n\n        <section className=\"row text-secondary\">\n                <div className=\"col-md-4\">\n                    <h3 className=\"text-center text-uppercase\">\n                         'User Profile' \n\n                    </h3>\n                    <div className=\"avatar\">\n                        <img src={this.state.loggedUser.avatar === this.state.avatar ? this.state.loggedUser.avatar : 'https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png'} alt=\"avatar\" />\n                        <span>\n                            <i className=\"fas fa-camera\"></i>\n                            <p>Change</p>\n                            <input type=\"file\" name=\"file\" id=\"file_up\" \n                            accept=\"image/*\" onChange={this.changeAvatar} />\n                        </span>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Name</label>\n                        <input type=\"text\" name=\"username\" value={this.state.username} className=\"form-control\"\n                        placeholder=\"Your username\" onChange={this.onChangeUsername} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" name=\"email\"  value={this.state.email}\n                        className=\"form-control\" onChange={this.onChangeEmail} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">New Password</label>\n                        <input type=\"password\" name=\"password\" value={this.password} className=\"form-control\"\n                        placeholder=\"Your new password\" onChange={this.onChangePassword}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"cf_password\">Confirm New Password</label>\n                        <input type=\"password\" name=\"cf_password\" value={this.cf_password} className=\"form-control\"\n                        placeholder=\"Confirm new password\" onChange={this.onChangeCFPassword}/>\n                    </div>\n\n                    <button className=\"btn btn-info\" onClick={this.handleUpdateProfile}>\n                        Update\n                    </button>\n\n                </div>\n\n                <div className=\"col-md-8\">\n                    <h3>Services available</h3>\n                    {this.state.loggedUser.username}\n                    <br>\n                    </br>\n                    {this.state.loggedUser.email}\n                    <br>\n                    </br>\n                 \n                </div>\n            </section>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);"]},"metadata":{},"sourceType":"module"}